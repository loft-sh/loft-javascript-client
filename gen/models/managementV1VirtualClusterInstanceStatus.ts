/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClusterV1SleepModeConfig } from '../models/clusterV1SleepModeConfig';
import { StorageV1Condition } from '../models/agentstorageV1Condition';
import { ManagementV1CurrentUserAccess } from '../models/managementV1CurrentUserAccess';
import { StorageV1ObjectsStatus } from '../models/storageV1ObjectsStatus';
import { StorageV1VirtualClusterTemplateDefinition } from '../models/storageV1VirtualClusterTemplateDefinition';


/**
* VirtualClusterInstanceStatus holds the status
*/
export class ManagementV1VirtualClusterInstanceStatus {
    /**
    * CanUpdate specifies if the requester can update the instance
    */
    'canUpdate'?: boolean;
    /**
    * CanUse specifies if the requester can use the instance
    */
    'canUse'?: boolean;
    /**
    * Conditions holds several conditions the virtual cluster might be in
    */
    'conditions'?: Array<StorageV1Condition>;
    'currentUserAccess'?: ManagementV1CurrentUserAccess;
    /**
    * DeployHash is the hash of the last deployed values.
    */
    'deployHash'?: string;
    /**
    * IgnoreReconciliation tells the controller to ignore reconciliation for this instance -- this is primarily used when migrating virtual cluster instances from project to project; this prevents a situation where there are two virtual cluster instances representing the same virtual cluster which could cause issues with concurrent reconciliations of the same object. Once the virtual cluster instance has been cloned and placed into the new project, this (the \"old\") virtual cluster instance can safely be deleted.
    */
    'ignoreReconciliation'?: boolean;
    /**
    * Message describes the reason in human-readable form why the cluster is in the current phase
    */
    'message'?: string;
    /**
    * Online specifies if there is at least one network peer available for an agentless vCluster.
    */
    'online'?: boolean;
    /**
    * Phase describes the current phase the virtual cluster instance is in
    */
    'phase'?: string;
    /**
    * Reason describes the reason in machine-readable form why the cluster is in the current phase
    */
    'reason'?: string;
    /**
    * ServiceUID is the service uid of the virtual cluster to uniquely identify it.
    */
    'serviceUID'?: string;
    'sleepModeConfig'?: ClusterV1SleepModeConfig;
    'spaceObjects'?: StorageV1ObjectsStatus;
    'virtualCluster'?: StorageV1VirtualClusterTemplateDefinition;
    'virtualClusterObjects'?: StorageV1ObjectsStatus;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "canUpdate",
            "baseName": "canUpdate",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canUse",
            "baseName": "canUse",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<StorageV1Condition>",
            "format": ""
        },
        {
            "name": "currentUserAccess",
            "baseName": "currentUserAccess",
            "type": "ManagementV1CurrentUserAccess",
            "format": ""
        },
        {
            "name": "deployHash",
            "baseName": "deployHash",
            "type": "string",
            "format": ""
        },
        {
            "name": "ignoreReconciliation",
            "baseName": "ignoreReconciliation",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "online",
            "baseName": "online",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "string",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "serviceUID",
            "baseName": "serviceUID",
            "type": "string",
            "format": ""
        },
        {
            "name": "sleepModeConfig",
            "baseName": "sleepModeConfig",
            "type": "ClusterV1SleepModeConfig",
            "format": ""
        },
        {
            "name": "spaceObjects",
            "baseName": "spaceObjects",
            "type": "StorageV1ObjectsStatus",
            "format": ""
        },
        {
            "name": "virtualCluster",
            "baseName": "virtualCluster",
            "type": "StorageV1VirtualClusterTemplateDefinition",
            "format": ""
        },
        {
            "name": "virtualClusterObjects",
            "baseName": "virtualClusterObjects",
            "type": "StorageV1ObjectsStatus",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1VirtualClusterInstanceStatus.attributeTypeMap;
    }

    public constructor() {
    }
}

