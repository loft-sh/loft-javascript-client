/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StorageV1DevPodWorkspaceInstanceContainerResource } from '../models/storageV1DevPodWorkspaceInstanceContainerResource';
import { StorageV1DevPodWorkspaceInstanceEvent } from '../models/storageV1DevPodWorkspaceInstanceEvent';
import { V1ContainerStatus } from '../models/V1ContainerStatus';
import { V1PodCondition } from '../models/V1PodCondition';
import { V1beta1ContainerMetrics } from '../models/V1beta1ContainerMetrics';


export class StorageV1DevPodWorkspaceInstancePodStatus {
    /**
    * Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
    */
    'conditions'?: Array<V1PodCondition>;
    /**
    * ContainerMetrics are the metrics of the pod that is running the workspace
    */
    'containerMetrics'?: Array<V1beta1ContainerMetrics>;
    /**
    * ContainerResources are the resources of the containers that are running the workspace
    */
    'containerResources'?: Array<StorageV1DevPodWorkspaceInstanceContainerResource>;
    /**
    * Statuses of containers in this pod. Each container in the pod should have at most one status in this list, and all statuses should be for containers in the pod. However this is not enforced. If a status for a non-existent container is present in the list, or the list has duplicate names, the behavior of various Kubernetes components is not defined and those statuses might be ignored. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
    */
    'containerStatuses'?: Array<V1ContainerStatus>;
    /**
    * Events are the events of the pod that is running the workspace. This will only be filled if the pod is not running.
    */
    'events'?: Array<StorageV1DevPodWorkspaceInstanceEvent>;
    /**
    * Statuses of init containers in this pod. The most recent successful non-restartable init container will have ready = true, the most recently started container will have startTime set. Each init container in the pod should have at most one status in this list, and all statuses should be for containers in the pod. However this is not enforced. If a status for a non-existent container is present in the list, or the list has duplicate names, the behavior of various Kubernetes components is not defined and those statuses might be ignored. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-and-container-status
    */
    'initContainerStatuses'?: Array<V1ContainerStatus>;
    /**
    * A human readable message indicating details about why the pod is in this condition.
    */
    'message'?: string;
    /**
    * NodeName is the name of the node that is running the workspace
    */
    'nodeName'?: string;
    /**
    * The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod\'s status. There are five possible phase values:  Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase  Possible enum values:  - `\"Failed\"` means that all containers in the pod have terminated, and at least one container has terminated in a failure (exited with a non-zero exit code or was stopped by the system).  - `\"Pending\"` means the pod has been accepted by the system, but one or more of the containers has not been started. This includes time before being bound to a node, as well as time spent pulling images onto the host.  - `\"Running\"` means the pod has been bound to a node and all of the containers have been started. At least one container is still running or is in the process of being restarted.  - `\"Succeeded\"` means that all containers in the pod have voluntarily terminated with a container exit code of 0, and the system is not going to restart any of these containers.  - `\"Unknown\"` means that for some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod. Deprecated: It isn\'t being set since 2015 (74da3b14b0c0f658b3bb8d2def5094686d0e9095)
    */
    'phase'?: StorageV1DevPodWorkspaceInstancePodStatusPhaseEnum;
    /**
    * A brief CamelCase message indicating details about why the pod is in this state. e.g. \'Evicted\'
    */
    'reason'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<V1PodCondition>",
            "format": ""
        },
        {
            "name": "containerMetrics",
            "baseName": "containerMetrics",
            "type": "Array<V1beta1ContainerMetrics>",
            "format": ""
        },
        {
            "name": "containerResources",
            "baseName": "containerResources",
            "type": "Array<StorageV1DevPodWorkspaceInstanceContainerResource>",
            "format": ""
        },
        {
            "name": "containerStatuses",
            "baseName": "containerStatuses",
            "type": "Array<V1ContainerStatus>",
            "format": ""
        },
        {
            "name": "events",
            "baseName": "events",
            "type": "Array<StorageV1DevPodWorkspaceInstanceEvent>",
            "format": ""
        },
        {
            "name": "initContainerStatuses",
            "baseName": "initContainerStatuses",
            "type": "Array<V1ContainerStatus>",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "nodeName",
            "baseName": "nodeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "StorageV1DevPodWorkspaceInstancePodStatusPhaseEnum",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StorageV1DevPodWorkspaceInstancePodStatus.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum StorageV1DevPodWorkspaceInstancePodStatusPhaseEnum {
    Failed = 'Failed',
    Pending = 'Pending',
    Running = 'Running',
    Succeeded = 'Succeeded',
    Unknown = 'Unknown'
}

