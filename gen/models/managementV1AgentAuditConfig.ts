/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ManagementV1AuditPolicy } from './managementV1AuditPolicy';


export class ManagementV1AgentAuditConfig {
    /**
    * Compress determines if the rotated log files should be compressed using gzip. The default is not to perform compression.
    */
    'compress'?: boolean;
    /**
    * If true, the agent will not send back any audit logs to Loft itself.
    */
    'disableAgentSyncBack'?: boolean;
    /**
    * If audit is enabled and incoming api requests will be logged based on the supplied policy.
    */
    'enabled'?: boolean;
    /**
    * Level is an optional log level for audit logs. Cannot be used together with policy
    */
    'level'?: number;
    /**
    * MaxAge is the maximum number of days to retain old log files based on the timestamp encoded in their filename.  Note that a day is defined as 24 hours and may not exactly correspond to calendar days due to daylight savings, leap seconds, etc. The default is not to remove old log files based on age.
    */
    'maxAge'?: number;
    /**
    * MaxBackups is the maximum number of old log files to retain.  The default is to retain all old log files (though MaxAge may still cause them to get deleted.)
    */
    'maxBackups'?: number;
    /**
    * MaxSize is the maximum size in megabytes of the log file before it gets rotated. It defaults to 100 megabytes.
    */
    'maxSize'?: number;
    /**
    * The path where to save the audit log files. This is required if audit is enabled. Backup log files will be retained in the same directory.
    */
    'path'?: string;
    'policy'?: ManagementV1AuditPolicy;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "compress",
            "baseName": "compress",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "disableAgentSyncBack",
            "baseName": "disableAgentSyncBack",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "enabled",
            "baseName": "enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "maxAge",
            "baseName": "maxAge",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "maxBackups",
            "baseName": "maxBackups",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "maxSize",
            "baseName": "maxSize",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "path",
            "baseName": "path",
            "type": "string",
            "format": ""
        },
        {
            "name": "policy",
            "baseName": "policy",
            "type": "ManagementV1AuditPolicy",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1AgentAuditConfig.attributeTypeMap;
    }

    public constructor() {
    }
}

