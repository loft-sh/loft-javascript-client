/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StorageV1AccessKeyVirtualCluster } from '../models/storageV1AccessKeyVirtualCluster';
import { StorageV1GroupResources } from '../models/storageV1GroupResources';


/**
* AccessKeyScopeRule describes a rule for the access key
*/
export class StorageV1AccessKeyScopeRule {
    /**
    * Cluster that this rule matches. Only applies to cluster requests. If this is set, no requests for non cluster requests are allowed. An empty cluster means no restrictions will apply.
    */
    'cluster'?: string;
    /**
    * Namespaces that this rule matches. The empty string \"\" matches non-namespaced resources. An empty list implies every namespace.
    */
    'namespaces'?: Array<string>;
    /**
    * NonResourceURLs is a set of URL paths that should be checked. *s are allowed, but only as the full, final step in the path. Examples:  \"/metrics\" - Log requests for apiserver metrics  \"/healthz*\" - Log all health checks
    */
    'nonResourceURLs'?: Array<string>;
    /**
    * RequestTargets is a list of request targets that are allowed. An empty list implies every request.
    */
    'requestTargets'?: Array<string>;
    /**
    * Resources that this rule matches. An empty list implies all kinds in all API groups.
    */
    'resources'?: Array<StorageV1GroupResources>;
    /**
    * The verbs that match this rule. An empty list implies every verb.
    */
    'verbs'?: Array<string>;
    /**
    * VirtualClusters that this rule matches. Only applies to virtual cluster requests. An empty list means no restrictions will apply.
    */
    'virtualClusters'?: Array<StorageV1AccessKeyVirtualCluster>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cluster",
            "baseName": "cluster",
            "type": "string",
            "format": ""
        },
        {
            "name": "namespaces",
            "baseName": "namespaces",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "nonResourceURLs",
            "baseName": "nonResourceURLs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "requestTargets",
            "baseName": "requestTargets",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "Array<StorageV1GroupResources>",
            "format": ""
        },
        {
            "name": "verbs",
            "baseName": "verbs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "virtualClusters",
            "baseName": "virtualClusters",
            "type": "Array<StorageV1AccessKeyVirtualCluster>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StorageV1AccessKeyScopeRule.attributeTypeMap;
    }

    public constructor() {
    }
}

