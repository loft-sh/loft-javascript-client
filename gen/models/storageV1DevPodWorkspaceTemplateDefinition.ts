/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StorageV1DevPodProviderOption } from '../models/storageV1DevPodProviderOption';
import { StorageV1DevPodWorkspaceProvider } from '../models/storageV1DevPodWorkspaceProvider';
import { StorageV1SpaceTemplateDefinition } from '../models/storageV1SpaceTemplateDefinition';
import { StorageV1TemplateRef } from '../models/storageV1TemplateRef';


export class StorageV1DevPodWorkspaceTemplateDefinition {
    /**
    * GitCloneStrategy specifies how git based workspace are being cloned. Can be \"\" (full, default), treeless, blobless or shallow  Possible enum values:  - `\"\"`  - `\"blobless\"`  - `\"shallow\"`  - `\"treeless\"`
    */
    'gitCloneStrategy'?: StorageV1DevPodWorkspaceTemplateDefinitionGitCloneStrategyEnum;
    'provider': StorageV1DevPodWorkspaceProvider;
    'spaceTemplate'?: StorageV1SpaceTemplateDefinition;
    'spaceTemplateRef'?: StorageV1TemplateRef;
    /**
    * UseProjectGitCredentials specifies if the project git credentials should be used instead of local ones for this workspace
    */
    'useProjectGitCredentials'?: boolean;
    /**
    * WorkspaceEnv are environment variables that should be available within the created workspace.
    */
    'workspaceEnv'?: { [key: string]: StorageV1DevPodProviderOption; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "gitCloneStrategy",
            "baseName": "gitCloneStrategy",
            "type": "StorageV1DevPodWorkspaceTemplateDefinitionGitCloneStrategyEnum",
            "format": ""
        },
        {
            "name": "provider",
            "baseName": "provider",
            "type": "StorageV1DevPodWorkspaceProvider",
            "format": ""
        },
        {
            "name": "spaceTemplate",
            "baseName": "spaceTemplate",
            "type": "StorageV1SpaceTemplateDefinition",
            "format": ""
        },
        {
            "name": "spaceTemplateRef",
            "baseName": "spaceTemplateRef",
            "type": "StorageV1TemplateRef",
            "format": ""
        },
        {
            "name": "useProjectGitCredentials",
            "baseName": "useProjectGitCredentials",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "workspaceEnv",
            "baseName": "workspaceEnv",
            "type": "{ [key: string]: StorageV1DevPodProviderOption; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StorageV1DevPodWorkspaceTemplateDefinition.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum StorageV1DevPodWorkspaceTemplateDefinitionGitCloneStrategyEnum {
    Empty = '',
    Blobless = 'blobless',
    Shallow = 'shallow',
    Treeless = 'treeless'
}

