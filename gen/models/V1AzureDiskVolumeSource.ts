/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
* AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
*/
export class V1AzureDiskVolumeSource {
    /**
    * cachingMode is the Host Caching mode: None, Read Only, Read Write.  Possible enum values:  - `\"None\"`  - `\"ReadOnly\"`  - `\"ReadWrite\"`
    */
    'cachingMode'?: V1AzureDiskVolumeSourceCachingModeEnum;
    /**
    * diskName is the Name of the data disk in the blob storage
    */
    'diskName': string;
    /**
    * diskURI is the URI of data disk in the blob storage
    */
    'diskURI': string;
    /**
    * fsType is Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.
    */
    'fsType'?: string;
    /**
    * kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared  Possible enum values:  - `\"Dedicated\"`  - `\"Managed\"`  - `\"Shared\"`
    */
    'kind'?: V1AzureDiskVolumeSourceKindEnum;
    /**
    * readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    */
    'readOnly'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cachingMode",
            "baseName": "cachingMode",
            "type": "V1AzureDiskVolumeSourceCachingModeEnum",
            "format": ""
        },
        {
            "name": "diskName",
            "baseName": "diskName",
            "type": "string",
            "format": ""
        },
        {
            "name": "diskURI",
            "baseName": "diskURI",
            "type": "string",
            "format": ""
        },
        {
            "name": "fsType",
            "baseName": "fsType",
            "type": "string",
            "format": ""
        },
        {
            "name": "kind",
            "baseName": "kind",
            "type": "V1AzureDiskVolumeSourceKindEnum",
            "format": ""
        },
        {
            "name": "readOnly",
            "baseName": "readOnly",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1AzureDiskVolumeSource.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum V1AzureDiskVolumeSourceCachingModeEnum {
    None = 'None',
    ReadOnly = 'ReadOnly',
    ReadWrite = 'ReadWrite'
}
export enum V1AzureDiskVolumeSourceKindEnum {
    Dedicated = 'Dedicated',
    Managed = 'Managed',
    Shared = 'Shared'
}

