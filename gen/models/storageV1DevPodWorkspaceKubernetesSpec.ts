/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StorageV1DevPodWorkspacePodTemplate } from '../models/storageV1DevPodWorkspacePodTemplate';
import { StorageV1DevPodWorkspaceVolumeClaimTemplate } from '../models/storageV1DevPodWorkspaceVolumeClaimTemplate';
import { StorageV1SpaceTemplateDefinition } from '../models/storageV1SpaceTemplateDefinition';
import { StorageV1TemplateRef } from '../models/storageV1TemplateRef';
import { StorageV1VirtualClusterTemplateDefinition } from '../models/storageV1VirtualClusterTemplateDefinition';


export class StorageV1DevPodWorkspaceKubernetesSpec {
    /**
    * NodeArchitecture specifies the node architecture the workspace image will be built for. Only necessary if you need to build workspace images on the fly in the kubernetes cluster and your cluster is mixed architecture.
    */
    'nodeArchitecture'?: string;
    'pod'?: StorageV1DevPodWorkspacePodTemplate;
    /**
    * PodTimeout specifies a maximum duration to wait for the workspace pod to start up before failing. Default: 10m
    */
    'podTimeout'?: string;
    'spaceTemplate'?: StorageV1SpaceTemplateDefinition;
    'spaceTemplateRef'?: StorageV1TemplateRef;
    'virtualClusterTemplate'?: StorageV1VirtualClusterTemplateDefinition;
    'virtualClusterTemplateRef'?: StorageV1TemplateRef;
    'volumeClaim'?: StorageV1DevPodWorkspaceVolumeClaimTemplate;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "nodeArchitecture",
            "baseName": "nodeArchitecture",
            "type": "string",
            "format": ""
        },
        {
            "name": "pod",
            "baseName": "pod",
            "type": "StorageV1DevPodWorkspacePodTemplate",
            "format": ""
        },
        {
            "name": "podTimeout",
            "baseName": "podTimeout",
            "type": "string",
            "format": ""
        },
        {
            "name": "spaceTemplate",
            "baseName": "spaceTemplate",
            "type": "StorageV1SpaceTemplateDefinition",
            "format": ""
        },
        {
            "name": "spaceTemplateRef",
            "baseName": "spaceTemplateRef",
            "type": "StorageV1TemplateRef",
            "format": ""
        },
        {
            "name": "virtualClusterTemplate",
            "baseName": "virtualClusterTemplate",
            "type": "StorageV1VirtualClusterTemplateDefinition",
            "format": ""
        },
        {
            "name": "virtualClusterTemplateRef",
            "baseName": "virtualClusterTemplateRef",
            "type": "StorageV1TemplateRef",
            "format": ""
        },
        {
            "name": "volumeClaim",
            "baseName": "volumeClaim",
            "type": "StorageV1DevPodWorkspaceVolumeClaimTemplate",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StorageV1DevPodWorkspaceKubernetesSpec.attributeTypeMap;
    }

    public constructor() {
    }
}

