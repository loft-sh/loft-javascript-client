/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StorageV1Access } from '../models/storageV1Access';
import { StorageV1AllowedCluster } from '../models/storageV1AllowedCluster';
import { StorageV1AllowedRunner } from '../models/storageV1AllowedRunner';
import { StorageV1AllowedTemplate } from '../models/storageV1AllowedTemplate';
import { StorageV1ArgoIntegrationSpec } from '../models/storageV1ArgoIntegrationSpec';
import { StorageV1Member } from '../models/storageV1Member';
import { StorageV1NamespacePattern } from '../models/storageV1NamespacePattern';
import { StorageV1Quotas } from '../models/storageV1Quotas';
import { StorageV1RancherIntegrationSpec } from '../models/storageV1RancherIntegrationSpec';
import { StorageV1RequireTemplate } from '../models/storageV1RequireTemplate';
import { StorageV1UserOrTeam } from '../models/storageV1UserOrTeam';
import { StorageV1VaultIntegrationSpec } from '../models/storageV1VaultIntegrationSpec';


/**
* ProjectSpec holds the specification
*/
export class ManagementV1ProjectSpec {
    /**
    * Access holds the access rights for users and teams
    */
    'access'?: Array<StorageV1Access>;
    /**
    * AllowedClusters are target clusters that are allowed to target with environments.
    */
    'allowedClusters'?: Array<StorageV1AllowedCluster>;
    /**
    * AllowedRunners are target runners that are allowed to target with DevPod environments.
    */
    'allowedRunners'?: Array<StorageV1AllowedRunner>;
    /**
    * AllowedTemplates are the templates that are allowed to use in this project.
    */
    'allowedTemplates'?: Array<StorageV1AllowedTemplate>;
    'argoCD'?: StorageV1ArgoIntegrationSpec;
    /**
    * Description describes an app
    */
    'description'?: string;
    /**
    * DisplayName is the name that should be displayed in the UI
    */
    'displayName'?: string;
    /**
    * Members are the users and teams that are part of this project
    */
    'members'?: Array<StorageV1Member>;
    'namespacePattern'?: StorageV1NamespacePattern;
    'owner'?: StorageV1UserOrTeam;
    'quotas'?: StorageV1Quotas;
    'rancher'?: StorageV1RancherIntegrationSpec;
    'requireTemplate'?: StorageV1RequireTemplate;
    'vault'?: StorageV1VaultIntegrationSpec;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "access",
            "baseName": "access",
            "type": "Array<StorageV1Access>",
            "format": ""
        },
        {
            "name": "allowedClusters",
            "baseName": "allowedClusters",
            "type": "Array<StorageV1AllowedCluster>",
            "format": ""
        },
        {
            "name": "allowedRunners",
            "baseName": "allowedRunners",
            "type": "Array<StorageV1AllowedRunner>",
            "format": ""
        },
        {
            "name": "allowedTemplates",
            "baseName": "allowedTemplates",
            "type": "Array<StorageV1AllowedTemplate>",
            "format": ""
        },
        {
            "name": "argoCD",
            "baseName": "argoCD",
            "type": "StorageV1ArgoIntegrationSpec",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string",
            "format": ""
        },
        {
            "name": "members",
            "baseName": "members",
            "type": "Array<StorageV1Member>",
            "format": ""
        },
        {
            "name": "namespacePattern",
            "baseName": "namespacePattern",
            "type": "StorageV1NamespacePattern",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "StorageV1UserOrTeam",
            "format": ""
        },
        {
            "name": "quotas",
            "baseName": "quotas",
            "type": "StorageV1Quotas",
            "format": ""
        },
        {
            "name": "rancher",
            "baseName": "rancher",
            "type": "StorageV1RancherIntegrationSpec",
            "format": ""
        },
        {
            "name": "requireTemplate",
            "baseName": "requireTemplate",
            "type": "StorageV1RequireTemplate",
            "format": ""
        },
        {
            "name": "vault",
            "baseName": "vault",
            "type": "StorageV1VaultIntegrationSpec",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1ProjectSpec.attributeTypeMap;
    }

    public constructor() {
    }
}

