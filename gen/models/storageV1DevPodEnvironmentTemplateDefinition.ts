/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StorageV1GitEnvironmentTemplate } from '../models/storageV1GitEnvironmentTemplate';


export class StorageV1DevPodEnvironmentTemplateDefinition {
    'git'?: StorageV1GitEnvironmentTemplate;
    /**
    * Inline holds an inline devcontainer.json definition
    */
    'inline'?: string;
    /**
    * WorkspaceRepositoryCloneStrategy determines how the workspaces git repository will be checked out in the pod if the workspace is git based  Possible enum values:  - `\"\"`  - `\"blobless\"`  - `\"shallow\"`  - `\"treeless\"`
    */
    'workspaceRepositoryCloneStrategy'?: StorageV1DevPodEnvironmentTemplateDefinitionWorkspaceRepositoryCloneStrategyEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "git",
            "baseName": "git",
            "type": "StorageV1GitEnvironmentTemplate",
            "format": ""
        },
        {
            "name": "inline",
            "baseName": "inline",
            "type": "string",
            "format": ""
        },
        {
            "name": "workspaceRepositoryCloneStrategy",
            "baseName": "workspaceRepositoryCloneStrategy",
            "type": "StorageV1DevPodEnvironmentTemplateDefinitionWorkspaceRepositoryCloneStrategyEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StorageV1DevPodEnvironmentTemplateDefinition.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum StorageV1DevPodEnvironmentTemplateDefinitionWorkspaceRepositoryCloneStrategyEnum {
    Empty = '',
    Blobless = 'blobless',
    Shallow = 'shallow',
    Treeless = 'treeless'
}

