/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ManagementV1GroupResources } from './managementV1GroupResources';


/**
* AuditPolicyRule describes a policy for auditing
*/
export class ManagementV1AuditPolicyRule {
    /**
    * Clusters that this rule matches. Only applies to cluster requests. If this is set, no events for non cluster requests will be created. An empty list means no restrictions will apply.
    */
    'clusters'?: Array<string>;
    /**
    * The Level that requests matching this rule are recorded at.
    */
    'level': string;
    /**
    * Namespaces that this rule matches. The empty string \"\" matches non-namespaced resources. An empty list implies every namespace.
    */
    'namespaces'?: Array<string>;
    /**
    * NonResourceURLs is a set of URL paths that should be audited. *s are allowed, but only as the full, final step in the path. Examples:  \"/metrics\" - Log requests for apiserver metrics  \"/healthz*\" - Log all health checks
    */
    'nonResourceURLs'?: Array<string>;
    /**
    * OmitStages is a list of stages for which no events are created. Note that this can also be specified policy wide in which case the union of both are omitted. An empty list means no restrictions will apply.
    */
    'omitStages'?: Array<string>;
    /**
    * RequestTargets is a list of request targets for which events are created. An empty list implies every request.
    */
    'requestTargets'?: Array<string>;
    /**
    * Resources that this rule matches. An empty list implies all kinds in all API groups.
    */
    'resources'?: Array<ManagementV1GroupResources>;
    /**
    * The user groups this rule applies to. A user is considered matching if it is a member of any of the UserGroups. An empty list implies every user group.
    */
    'userGroups'?: Array<string>;
    /**
    * The users (by authenticated user name) this rule applies to. An empty list implies every user.
    */
    'users'?: Array<string>;
    /**
    * The verbs that match this rule. An empty list implies every verb.
    */
    'verbs'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clusters",
            "baseName": "clusters",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "string",
            "format": ""
        },
        {
            "name": "namespaces",
            "baseName": "namespaces",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "nonResourceURLs",
            "baseName": "nonResourceURLs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "omitStages",
            "baseName": "omitStages",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "requestTargets",
            "baseName": "requestTargets",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "Array<ManagementV1GroupResources>",
            "format": ""
        },
        {
            "name": "userGroups",
            "baseName": "userGroups",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "users",
            "baseName": "users",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "verbs",
            "baseName": "verbs",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1AuditPolicyRule.attributeTypeMap;
    }

    public constructor() {
    }
}

