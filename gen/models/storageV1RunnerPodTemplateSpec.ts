/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1Affinity } from '../models/V1Affinity';
import { V1Container } from '../models/V1Container';
import { V1EnvFromSource } from '../models/V1EnvFromSource';
import { V1EnvVar } from '../models/V1EnvVar';
import { V1HostAlias } from '../models/V1HostAlias';
import { V1ResourceRequirements } from '../models/V1ResourceRequirements';
import { V1Toleration } from '../models/V1Toleration';
import { V1Volume } from '../models/V1Volume';
import { V1VolumeMount } from '../models/V1VolumeMount';


export class StorageV1RunnerPodTemplateSpec {
    'affinity'?: V1Affinity;
    /**
    * List of environment variables to set in the container. Cannot be updated.
    */
    'env'?: Array<V1EnvVar>;
    /**
    * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    */
    'envFrom'?: Array<V1EnvFromSource>;
    /**
    * Set host aliases for the Runner Pod
    */
    'hostAliases'?: Array<V1HostAlias>;
    /**
    * Runner pod image to use other than default
    */
    'image'?: string;
    /**
    * Set up Init Containers for the Runner
    */
    'initContainers'?: Array<V1Container>;
    /**
    * Set the NodeSelector for the Runner Pod
    */
    'nodeSelector'?: { [key: string]: string; };
    'resource'?: V1ResourceRequirements;
    /**
    * Set the Tolerations for the Runner Pod
    */
    'tolerations'?: Array<V1Toleration>;
    /**
    * Set Volume Mounts for the Runner Pod
    */
    'volumeMounts'?: Array<V1VolumeMount>;
    /**
    * Set Volumes for the Runner Pod
    */
    'volumes'?: Array<V1Volume>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "affinity",
            "baseName": "affinity",
            "type": "V1Affinity",
            "format": ""
        },
        {
            "name": "env",
            "baseName": "env",
            "type": "Array<V1EnvVar>",
            "format": ""
        },
        {
            "name": "envFrom",
            "baseName": "envFrom",
            "type": "Array<V1EnvFromSource>",
            "format": ""
        },
        {
            "name": "hostAliases",
            "baseName": "hostAliases",
            "type": "Array<V1HostAlias>",
            "format": ""
        },
        {
            "name": "image",
            "baseName": "image",
            "type": "string",
            "format": ""
        },
        {
            "name": "initContainers",
            "baseName": "initContainers",
            "type": "Array<V1Container>",
            "format": ""
        },
        {
            "name": "nodeSelector",
            "baseName": "nodeSelector",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "resource",
            "baseName": "resource",
            "type": "V1ResourceRequirements",
            "format": ""
        },
        {
            "name": "tolerations",
            "baseName": "tolerations",
            "type": "Array<V1Toleration>",
            "format": ""
        },
        {
            "name": "volumeMounts",
            "baseName": "volumeMounts",
            "type": "Array<V1VolumeMount>",
            "format": ""
        },
        {
            "name": "volumes",
            "baseName": "volumes",
            "type": "Array<V1Volume>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StorageV1RunnerPodTemplateSpec.attributeTypeMap;
    }

    public constructor() {
    }
}

