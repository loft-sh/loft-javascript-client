/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
* Button is an object that represents a button in the Loft UI that links to some external service for handling operations for licensing for example.
*/
export class ServerButton {
    /**
    * URL is the link at the other end of the button.
    */
    'URL': string;
    /**
    * Direct indicates if the Loft front end should directly hit this endpoint. If false, it means that the Loft front end will be hitting the license server first to generate a one time token for the operation; this also means that there will be a redirect URL in the response to the request for this and that link should be followed by the front end.
    */
    'direct'?: boolean;
    /**
    * DisplayText is the text to display on the button. If display text is unset the button will never be shown in the loft UI.
    */
    'displayText'?: string;
    /**
    * PayloadType indicates the payload type to set in the request. Typically, this will be \"standard\" -- meaning the standard payload that includes the instance token auth and a return url, however in the future we may add additional types. An unset value is assumed to be \"standard\".
    */
    'payloadType'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "URL",
            "baseName": "URL",
            "type": "string",
            "format": ""
        },
        {
            "name": "direct",
            "baseName": "direct",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "displayText",
            "baseName": "displayText",
            "type": "string",
            "format": ""
        },
        {
            "name": "payloadType",
            "baseName": "payloadType",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ServerButton.attributeTypeMap;
    }

    public constructor() {
    }
}

