/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ManagementV1AuthenticationGroupClusterAccountTemplate } from '../models/managementV1AuthenticationGroupClusterAccountTemplate';
import { StorageV1UserClusterAccountTemplate } from '../models/storageV1UserClusterAccountTemplate';


export class ManagementV1AuthenticationMicrosoft {
    /**
    * Microsoft client id
    */
    'clientId': string;
    /**
    * Microsoft client secret
    */
    'clientSecret': string;
    /**
    * Cluster Account Templates that will be applied for users logging in through this authentication
    */
    'clusterAccountTemplates'?: Array<StorageV1UserClusterAccountTemplate>;
    /**
    * A mapping between groups and cluster account templates. If the user has a certain group, the cluster account template will be added during creation
    */
    'groupClusterAccountTemplates'?: Array<ManagementV1AuthenticationGroupClusterAccountTemplate>;
    /**
    * It is possible to require a user to be a member of a particular group in order to be successfully authenticated in loft.
    */
    'groups'?: Array<string>;
    /**
    * configuration option restricts the list to include only security groups. By default all groups (security, Office 365, mailing lists) are included.
    */
    'onlySecurityGroups'?: boolean;
    /**
    * loft redirect uri. Usually https://loft.my.domain/auth/microsoft/callback
    */
    'redirectURI': string;
    /**
    * tenant configuration parameter controls what kinds of accounts may be authenticated in loft. By default, all types of Microsoft accounts (consumers and organizations) can authenticate in loft via Microsoft. To change this, set the tenant parameter to one of the following:  common - both personal and business/school accounts can authenticate in loft via Microsoft (default) consumers - only personal accounts can authenticate in loft organizations - only business/school accounts can authenticate in loft tenant uuid or tenant name - only accounts belonging to specific tenant identified by either tenant uuid or tenant name can authenticate in loft
    */
    'tenant'?: string;
    /**
    * Restrict the groups claims to include only the userâ€™s groups that are in the configured groups
    */
    'useGroupsAsWhitelist'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "clientId",
            "baseName": "clientId",
            "type": "string",
            "format": ""
        },
        {
            "name": "clientSecret",
            "baseName": "clientSecret",
            "type": "string",
            "format": ""
        },
        {
            "name": "clusterAccountTemplates",
            "baseName": "clusterAccountTemplates",
            "type": "Array<StorageV1UserClusterAccountTemplate>",
            "format": ""
        },
        {
            "name": "groupClusterAccountTemplates",
            "baseName": "groupClusterAccountTemplates",
            "type": "Array<ManagementV1AuthenticationGroupClusterAccountTemplate>",
            "format": ""
        },
        {
            "name": "groups",
            "baseName": "groups",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "onlySecurityGroups",
            "baseName": "onlySecurityGroups",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "redirectURI",
            "baseName": "redirectURI",
            "type": "string",
            "format": ""
        },
        {
            "name": "tenant",
            "baseName": "tenant",
            "type": "string",
            "format": ""
        },
        {
            "name": "useGroupsAsWhitelist",
            "baseName": "useGroupsAsWhitelist",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1AuthenticationMicrosoft.attributeTypeMap;
    }

    public constructor() {
    }
}

