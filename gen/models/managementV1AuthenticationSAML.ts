/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



export class ManagementV1AuthenticationSAML {
    /**
    * List of groups to filter access based on membership
    */
    'allowedGroups'?: Array<string>;
    /**
    * CA to use when validating the signature of the SAML response.
    */
    'ca'?: string;
    /**
    * CAData is a base64 encoded string that holds the ca certificate for validating the signature of the SAML response. Either CAData, CA or InsecureSkipSignatureValidation needs to be defined.
    */
    'caData'?: string;
    /**
    * Name of attribute in the returned assertions to map to email
    */
    'emailAttr'?: string;
    /**
    * When provided Loft will include this as the Issuer value during AuthnRequest. It will also override the redirectURI as the required audience when evaluating AudienceRestriction elements in the response.
    */
    'entityIssuer'?: string;
    /**
    * If used with allowed groups, only forwards the allowed groups and not all groups specified.
    */
    'filterGroups'?: boolean;
    /**
    * Name of attribute in the returned assertions to map to groups
    */
    'groupsAttr'?: string;
    /**
    * If GroupsDelim is supplied the connector assumes groups are returned as a single string instead of multiple attribute values. This delimiter will be used split the groups string.
    */
    'groupsDelim'?: string;
    /**
    * Ignore the ca cert
    */
    'insecureSkipSignatureValidation'?: boolean;
    /**
    * Requested format of the NameID. The NameID value is is mapped to the ID Token \'sub\' claim.  This can be an abbreviated form of the full URI with just the last component. For example, if this value is set to \"emailAddress\" the format will resolve to:    urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress  If no value is specified, this value defaults to:    urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
    */
    'nameIDPolicyFormat'?: string;
    /**
    * If the response assertion status value contains a Destination element, it must match this value exactly. Usually looks like https://your-loft-domain/auth/saml/callback
    */
    'redirectURI'?: string;
    /**
    * Issuer value expected in the SAML response. Optional.
    */
    'ssoIssuer'?: string;
    /**
    * SSO URL used for POST value.
    */
    'ssoURL'?: string;
    /**
    * Name of attribute in the returned assertions to map to username
    */
    'usernameAttr'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "allowedGroups",
            "baseName": "allowedGroups",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "ca",
            "baseName": "ca",
            "type": "string",
            "format": ""
        },
        {
            "name": "caData",
            "baseName": "caData",
            "type": "string",
            "format": "byte"
        },
        {
            "name": "emailAttr",
            "baseName": "emailAttr",
            "type": "string",
            "format": ""
        },
        {
            "name": "entityIssuer",
            "baseName": "entityIssuer",
            "type": "string",
            "format": ""
        },
        {
            "name": "filterGroups",
            "baseName": "filterGroups",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "groupsAttr",
            "baseName": "groupsAttr",
            "type": "string",
            "format": ""
        },
        {
            "name": "groupsDelim",
            "baseName": "groupsDelim",
            "type": "string",
            "format": ""
        },
        {
            "name": "insecureSkipSignatureValidation",
            "baseName": "insecureSkipSignatureValidation",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "nameIDPolicyFormat",
            "baseName": "nameIDPolicyFormat",
            "type": "string",
            "format": ""
        },
        {
            "name": "redirectURI",
            "baseName": "redirectURI",
            "type": "string",
            "format": ""
        },
        {
            "name": "ssoIssuer",
            "baseName": "ssoIssuer",
            "type": "string",
            "format": ""
        },
        {
            "name": "ssoURL",
            "baseName": "ssoURL",
            "type": "string",
            "format": ""
        },
        {
            "name": "usernameAttr",
            "baseName": "usernameAttr",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1AuthenticationSAML.attributeTypeMap;
    }

    public constructor() {
    }
}

