/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClusterV1HelmReleaseConfig } from './clusterV1HelmReleaseConfig';
import { StorageV1Access } from './storageV1Access';
import { StorageV1AppParameter } from './storageV1AppParameter';
import { StorageV1AppVersion } from './storageV1AppVersion';
import { StorageV1HelmConfiguration } from './storageV1HelmConfiguration';
import { StorageV1StreamContainer } from './storageV1StreamContainer';
import { StorageV1UserOrTeam } from './storageV1UserOrTeam';


/**
* AppSpec holds the specification
*/
export class ManagementV1AppSpec {
    /**
    * Access holds the access rights for users and teams
    */
    'access'?: Array<StorageV1Access>;
    /**
    * Clusters are the clusters this app can be installed in.
    */
    'clusters'?: Array<string>;
    'config'?: ClusterV1HelmReleaseConfig;
    /**
    * DefaultNamespace is the default namespace this app should installed in.
    */
    'defaultNamespace'?: string;
    /**
    * Description describes an app
    */
    'description'?: string;
    /**
    * DisplayName is the name that should be displayed in the UI
    */
    'displayName'?: string;
    'helm'?: StorageV1HelmConfiguration;
    /**
    * Icon holds an URL to the app icon
    */
    'icon'?: string;
    /**
    * DEPRECATED: Use config instead manifest represents kubernetes resources that will be deployed into the target namespace
    */
    'manifests'?: string;
    'owner'?: StorageV1UserOrTeam;
    /**
    * Parameters define additional app parameters that will set helm values
    */
    'parameters'?: Array<StorageV1AppParameter>;
    /**
    * Readme is a longer markdown string that describes the app.
    */
    'readme'?: string;
    /**
    * RecommendedApp specifies where this app should show up as recommended app
    */
    'recommendedApp'?: Array<string>;
    'streamContainer'?: StorageV1StreamContainer;
    /**
    * Timeout is the time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)
    */
    'timeout'?: string;
    /**
    * Versions are different app versions that can be referenced
    */
    'versions'?: Array<StorageV1AppVersion>;
    /**
    * Wait determines if Loft should wait during deploy for the app to become ready
    */
    'wait'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "access",
            "baseName": "access",
            "type": "Array<StorageV1Access>",
            "format": ""
        },
        {
            "name": "clusters",
            "baseName": "clusters",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "config",
            "baseName": "config",
            "type": "ClusterV1HelmReleaseConfig",
            "format": ""
        },
        {
            "name": "defaultNamespace",
            "baseName": "defaultNamespace",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string",
            "format": ""
        },
        {
            "name": "helm",
            "baseName": "helm",
            "type": "StorageV1HelmConfiguration",
            "format": ""
        },
        {
            "name": "icon",
            "baseName": "icon",
            "type": "string",
            "format": ""
        },
        {
            "name": "manifests",
            "baseName": "manifests",
            "type": "string",
            "format": ""
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "StorageV1UserOrTeam",
            "format": ""
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "Array<StorageV1AppParameter>",
            "format": ""
        },
        {
            "name": "readme",
            "baseName": "readme",
            "type": "string",
            "format": ""
        },
        {
            "name": "recommendedApp",
            "baseName": "recommendedApp",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "streamContainer",
            "baseName": "streamContainer",
            "type": "StorageV1StreamContainer",
            "format": ""
        },
        {
            "name": "timeout",
            "baseName": "timeout",
            "type": "string",
            "format": ""
        },
        {
            "name": "versions",
            "baseName": "versions",
            "type": "Array<StorageV1AppVersion>",
            "format": ""
        },
        {
            "name": "wait",
            "baseName": "wait",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1AppSpec.attributeTypeMap;
    }

    public constructor() {
    }
}

