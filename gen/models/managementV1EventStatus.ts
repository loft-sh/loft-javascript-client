/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AuditV1ObjectReference } from './auditV1ObjectReference';
import { RuntimeUnknown } from './RuntimeUnknown';

import { V1Status } from './V1Status';
import { V1UserInfo } from './V1UserInfo';


/**
* EventStatus holds the status, which is the parsed raw config
*/
export class ManagementV1EventStatus {
    /**
    * Annotations is an unstructured key value map stored with an audit event that may be set by plugins invoked in the request serving chain, including authentication, authorization and admission plugins. Note that these annotations are for the audit event, and do not correspond to the metadata.annotations of the submitted object. Keys should uniquely identify the informing component to avoid name collisions (e.g. podsecuritypolicy.admission.k8s.io/policy). Values should be short. Annotations are included in the Metadata level.
    */
    'annotations'?: { [key: string]: string; };
    /**
    * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    */
    'apiVersion'?: string;
    /**
    * Unique audit ID, generated for each request.
    */
    'auditID': string;
    'impersonatedUser'?: V1UserInfo;
    /**
    * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    */
    'kind'?: string;
    /**
    * AuditLevel at which event was generated
    */
    'level': string;
    'objectRef'?: AuditV1ObjectReference;
    'requestObject'?: RuntimeUnknown;
    /**
    * MicroTime is version of Time with microsecond level precision.
    */
    'requestReceivedTimestamp'?: Date;
    /**
    * RequestURI is the request URI as sent by the client to a server.
    */
    'requestURI': string;
    'responseObject'?: RuntimeUnknown;
    'responseStatus'?: V1Status;
    /**
    * Source IPs, from where the request originated and intermediate proxies.
    */
    'sourceIPs'?: Array<string>;
    /**
    * Stage of the request handling when this event instance was generated.
    */
    'stage': string;
    /**
    * MicroTime is version of Time with microsecond level precision.
    */
    'stageTimestamp'?: Date;
    'user': V1UserInfo;
    /**
    * UserAgent records the user agent string reported by the client. Note that the UserAgent is provided by the client, and must not be trusted.
    */
    'userAgent'?: string;
    /**
    * Verb is the kubernetes verb associated with the request. For non-resource requests, this is the lower-cased HTTP method.
    */
    'verb': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "annotations",
            "baseName": "annotations",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "apiVersion",
            "baseName": "apiVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "auditID",
            "baseName": "auditID",
            "type": "string",
            "format": ""
        },
        {
            "name": "impersonatedUser",
            "baseName": "impersonatedUser",
            "type": "V1UserInfo",
            "format": ""
        },
        {
            "name": "kind",
            "baseName": "kind",
            "type": "string",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "string",
            "format": ""
        },
        {
            "name": "objectRef",
            "baseName": "objectRef",
            "type": "AuditV1ObjectReference",
            "format": ""
        },
        {
            "name": "requestObject",
            "baseName": "requestObject",
            "type": "RuntimeUnknown",
            "format": ""
        },
        {
            "name": "requestReceivedTimestamp",
            "baseName": "requestReceivedTimestamp",
            "type": "Date",
            "format": "date-time-micro"
        },
        {
            "name": "requestURI",
            "baseName": "requestURI",
            "type": "string",
            "format": ""
        },
        {
            "name": "responseObject",
            "baseName": "responseObject",
            "type": "RuntimeUnknown",
            "format": ""
        },
        {
            "name": "responseStatus",
            "baseName": "responseStatus",
            "type": "V1Status",
            "format": ""
        },
        {
            "name": "sourceIPs",
            "baseName": "sourceIPs",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "stage",
            "baseName": "stage",
            "type": "string",
            "format": ""
        },
        {
            "name": "stageTimestamp",
            "baseName": "stageTimestamp",
            "type": "Date",
            "format": "date-time-micro"
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "V1UserInfo",
            "format": ""
        },
        {
            "name": "userAgent",
            "baseName": "userAgent",
            "type": "string",
            "format": ""
        },
        {
            "name": "verb",
            "baseName": "verb",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1EventStatus.attributeTypeMap;
    }

    public constructor() {
    }
}

