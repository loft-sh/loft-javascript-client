/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ClusterV1SleepModeConfig } from '../models/clusterV1SleepModeConfig';
import { StorageV1Condition } from '../models/agentstorageV1Condition';
import { StorageV1ObjectsStatus } from '../models/storageV1ObjectsStatus';
import { StorageV1SpaceTemplateDefinition } from '../models/storageV1SpaceTemplateDefinition';


/**
* SpaceInstanceStatus holds the status
*/
export class ManagementV1SpaceInstanceStatus {
    /**
    * CanUpdate specifies if the requester can update the instance
    */
    'canUpdate'?: boolean;
    /**
    * CanUse specifies if the requester can use the instance
    */
    'canUse'?: boolean;
    /**
    * Conditions holds several conditions the virtual cluster might be in
    */
    'conditions'?: Array<StorageV1Condition>;
    /**
    * IgnoreReconciliation tells the controller to ignore reconciliation for this instance -- this is primarily used when migrating virtual cluster instances from project to project; this prevents a situation where there are two virtual cluster instances representing the same virtual cluster which could cause issues with concurrent reconciliations of the same object. Once the virtual cluster instance has been cloned and placed into the new project, this (the \"old\") virtual cluster instance can safely be deleted.
    */
    'ignoreReconciliation'?: boolean;
    /**
    * Message describes the reason in human-readable form
    */
    'message'?: string;
    /**
    * Phase describes the current phase the space instance is in
    */
    'phase'?: string;
    /**
    * Reason describes the reason in machine-readable form
    */
    'reason'?: string;
    'sleepModeConfig'?: ClusterV1SleepModeConfig;
    'space'?: StorageV1SpaceTemplateDefinition;
    'spaceObjects'?: StorageV1ObjectsStatus;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "canUpdate",
            "baseName": "canUpdate",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "canUse",
            "baseName": "canUse",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<StorageV1Condition>",
            "format": ""
        },
        {
            "name": "ignoreReconciliation",
            "baseName": "ignoreReconciliation",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "string",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "sleepModeConfig",
            "baseName": "sleepModeConfig",
            "type": "ClusterV1SleepModeConfig",
            "format": ""
        },
        {
            "name": "space",
            "baseName": "space",
            "type": "StorageV1SpaceTemplateDefinition",
            "format": ""
        },
        {
            "name": "spaceObjects",
            "baseName": "spaceObjects",
            "type": "StorageV1ObjectsStatus",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementV1SpaceInstanceStatus.attributeTypeMap;
    }

    public constructor() {
    }
}

