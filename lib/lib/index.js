"use strict";var ce=Object.create;var A=Object.defineProperty;var le=Object.getOwnPropertyDescriptor;var pe=Object.getOwnPropertyNames;var me=Object.getPrototypeOf,ge=Object.prototype.hasOwnProperty;var Ve=(o,e)=>{for(var r in e)A(o,r,{get:e[r],enumerable:!0})},Q=(o,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of pe(e))!ge.call(o,t)&&t!==r&&A(o,t,{get:()=>e[t],enumerable:!(s=le(e,t))||s.enumerable});return o};var z=(o,e,r)=>(r=o!=null?ce(me(o)):{},Q(e||!o||!o.__esModule?A(r,"default",{value:o,enumerable:!0}):r,o)),de=o=>Q(A({},"__esModule",{value:!0}),o);var we={};Ve(we,{APIExtensionsGroup:()=>H,APIExtensionsGroupVersion:()=>ke,APIExtensionsVersion:()=>W,Client:()=>ue,ClusterBasePath:()=>j,Err:()=>S,ErrorTypeAlreadyExists:()=>ee,ErrorTypeBadGateway:()=>te,ErrorTypeBadRequest:()=>Z,ErrorTypeForbidden:()=>Y,ErrorTypeGatewayTimeout:()=>ne,ErrorTypeInternalError:()=>re,ErrorTypeNetwork:()=>O,ErrorTypeNotFound:()=>L,ErrorTypeNotImplemented:()=>se,ErrorTypeServiceUnavailable:()=>T,ErrorTypeUnauthorized:()=>U,ErrorTypeUnknown:()=>E,Failed:()=>x,List:()=>N,LoftSchemeGroup:()=>Re,LoftSchemeGroupCluster:()=>V,LoftSchemeGroupStorage:()=>be,LoftSchemeGroupVersion:()=>ve,LoftSchemeGroupVersionCluster:()=>he,LoftSchemeGroupVersionStorage:()=>Ce,LoftSchemeGroupVersionVirtualCluster:()=>fe,LoftSchemeGroupVirtualCluster:()=>q,LoftSchemeVersion:()=>y,LoftSchemeVersionCluster:()=>d,LoftSchemeVersionStorage:()=>Me,LoftSchemeVersionVirtualCluster:()=>F,ManagementBasePath:()=>J,MapErrorCode:()=>b,NewResource:()=>f,Ok:()=>P,ProjectBasePath:()=>_,Resources:()=>c,Return:()=>a,VClusterBasePath:()=>$,getApiHost:()=>B,getProjectNamespace:()=>Te,isResult:()=>ye});module.exports=de(we);var p=z(require("js-cookie")),ie=z(require("json-merge-patch"));var G={loftAccessKeyIdentifier:"loft_access_key",loftImpersonateSubjectIdentifier:"loft_impersonate_subject",loftImpersonateJoinedGroupIdentifier:"loft_impersonate_joined_group"};function v(o){return o||[]}var X={ManagementV1AgentAuditEvent:{group:"management.loft.sh",version:"v1",resource:"agentauditevents",subResource:"",namespaced:!1,kind:"AgentAuditEvent"},ManagementV1Announcement:{group:"management.loft.sh",version:"v1",resource:"announcements",subResource:"",namespaced:!1,kind:"Announcement"},ManagementV1App:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"",namespaced:!1,kind:"App"},ManagementV1Cluster:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"",namespaced:!1,kind:"Cluster"},ManagementV1ClusterAccess:{group:"management.loft.sh",version:"v1",resource:"clusteraccesses",subResource:"",namespaced:!1,kind:"ClusterAccess"},ManagementV1ClusterAgentConfig:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"agentconfig",namespaced:!1,kind:"ClusterAgentConfig"},ManagementV1ClusterCharts:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"charts",namespaced:!1,kind:"ClusterCharts"},ManagementV1ClusterConnect:{group:"management.loft.sh",version:"v1",resource:"clusterconnect",subResource:"",namespaced:!1,kind:"ClusterConnect"},ManagementV1ClusterDomain:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"domain",namespaced:!1,kind:"ClusterDomain"},ManagementV1ClusterMemberAccess:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"memberaccess",namespaced:!1,kind:"ClusterMemberAccess"},ManagementV1ClusterMembers:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"members",namespaced:!1,kind:"ClusterMembers"},ManagementV1ClusterReset:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"reset",namespaced:!1,kind:"ClusterReset"},ManagementV1ClusterRoleTemplate:{group:"management.loft.sh",version:"v1",resource:"clusterroletemplates",subResource:"",namespaced:!1,kind:"ClusterRoleTemplate"},ManagementV1ClusterVirtualClusterDefaults:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"virtualclusterdefaults",namespaced:!1,kind:"ClusterVirtualClusterDefaults"},ManagementV1Config:{group:"management.loft.sh",version:"v1",resource:"configs",subResource:"",namespaced:!1,kind:"Config"},ManagementV1DevPodWorkspaceInstance:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"",namespaced:!0,kind:"DevPodWorkspaceInstance"},ManagementV1DevPodWorkspaceTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacetemplates",subResource:"",namespaced:!1,kind:"DevPodWorkspaceTemplate"},ManagementV1DirectClusterEndpointToken:{group:"management.loft.sh",version:"v1",resource:"directclusterendpointtokens",subResource:"",namespaced:!1,kind:"DirectClusterEndpointToken"},ManagementV1Event:{group:"management.loft.sh",version:"v1",resource:"events",subResource:"",namespaced:!1,kind:"Event"},ManagementV1Feature:{group:"management.loft.sh",version:"v1",resource:"features",subResource:"",namespaced:!1,kind:"Feature"},ManagementV1IngressAuthToken:{group:"management.loft.sh",version:"v1",resource:"ingressauthtokens",subResource:"",namespaced:!1,kind:"IngressAuthToken"},ManagementV1Kiosk:{group:"management.loft.sh",version:"v1",resource:"kiosk",subResource:"",namespaced:!1,kind:"Kiosk"},ManagementV1License:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"",namespaced:!1,kind:"License"},ManagementV1LicenseRequest:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"request",namespaced:!1,kind:"LicenseRequest"},ManagementV1LicenseToken:{group:"management.loft.sh",version:"v1",resource:"licensetokens",subResource:"",namespaced:!1,kind:"LicenseToken"},ManagementV1LoftUpgrade:{group:"management.loft.sh",version:"v1",resource:"loftupgrades",subResource:"",namespaced:!1,kind:"LoftUpgrade"},ManagementV1OwnedAccessKey:{group:"management.loft.sh",version:"v1",resource:"ownedaccesskeys",subResource:"",namespaced:!1,kind:"OwnedAccessKey"},ManagementV1PolicyViolation:{group:"management.loft.sh",version:"v1",resource:"policyviolations",subResource:"",namespaced:!1,kind:"PolicyViolation"},ManagementV1Project:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"",namespaced:!1,kind:"Project"},ManagementV1ProjectChartInfo:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"chartinfo",namespaced:!1,kind:"ProjectChartInfo"},ManagementV1ProjectCharts:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"charts",namespaced:!1,kind:"ProjectCharts"},ManagementV1ProjectClusters:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"clusters",namespaced:!1,kind:"ProjectClusters"},ManagementV1ProjectImportSpace:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"importspace",namespaced:!1,kind:"ProjectImportSpace"},ManagementV1ProjectImportVirtualCluster:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"importvirtualcluster",namespaced:!1,kind:"ProjectImportVirtualCluster"},ManagementV1ProjectMembers:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"members",namespaced:!1,kind:"ProjectMembers"},ManagementV1ProjectMigrateSpaceInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratespaceinstance",namespaced:!1,kind:"ProjectMigrateSpaceInstance"},ManagementV1ProjectMigrateVirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratevirtualclusterinstance",namespaced:!1,kind:"ProjectMigrateVirtualClusterInstance"},ManagementV1ProjectSecret:{group:"management.loft.sh",version:"v1",resource:"projectsecrets",subResource:"",namespaced:!0,kind:"ProjectSecret"},ManagementV1ProjectTemplates:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"templates",namespaced:!1,kind:"ProjectTemplates"},ManagementV1RedirectToken:{group:"management.loft.sh",version:"v1",resource:"redirecttokens",subResource:"",namespaced:!1,kind:"RedirectToken"},ManagementV1ResetAccessKey:{group:"management.loft.sh",version:"v1",resource:"resetaccesskeys",subResource:"",namespaced:!1,kind:"ResetAccessKey"},ManagementV1Runner:{group:"management.loft.sh",version:"v1",resource:"runners",subResource:"",namespaced:!1,kind:"Runner"},ManagementV1RunnerConfig:{group:"management.loft.sh",version:"v1",resource:"runners",subResource:"config",namespaced:!1,kind:"RunnerConfig"},ManagementV1Self:{group:"management.loft.sh",version:"v1",resource:"selves",subResource:"",namespaced:!1,kind:"Self"},ManagementV1SelfSubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"selfsubjectaccessreviews",subResource:"",namespaced:!1,kind:"SelfSubjectAccessReview"},ManagementV1SharedSecret:{group:"management.loft.sh",version:"v1",resource:"sharedsecrets",subResource:"",namespaced:!0,kind:"SharedSecret"},ManagementV1SpaceConstraint:{group:"management.loft.sh",version:"v1",resource:"spaceconstraints",subResource:"",namespaced:!1,kind:"SpaceConstraint"},ManagementV1SpaceInstance:{group:"management.loft.sh",version:"v1",resource:"spaceinstances",subResource:"",namespaced:!0,kind:"SpaceInstance"},ManagementV1SpaceTemplate:{group:"management.loft.sh",version:"v1",resource:"spacetemplates",subResource:"",namespaced:!1,kind:"SpaceTemplate"},ManagementV1SubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"subjectaccessreviews",subResource:"",namespaced:!1,kind:"SubjectAccessReview"},ManagementV1Task:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"",namespaced:!1,kind:"Task"},ManagementV1TaskLog:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"log",namespaced:!1,kind:"TaskLog"},ManagementV1Team:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"",namespaced:!1,kind:"Team"},ManagementV1TeamAccessKeys:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"accesskeys",namespaced:!1,kind:"TeamAccessKeys"},ManagementV1TeamClusters:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"clusters",namespaced:!1,kind:"TeamClusters"},ManagementV1User:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"",namespaced:!1,kind:"User"},ManagementV1UserAccessKeys:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"accesskeys",namespaced:!1,kind:"UserAccessKeys"},ManagementV1UserClusters:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"clusters",namespaced:!1,kind:"UserClusters"},ManagementV1UserPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"permissions",namespaced:!1,kind:"UserPermissions"},ManagementV1UserProfile:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"profile",namespaced:!1,kind:"UserProfile"},ManagementV1VirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"",namespaced:!0,kind:"VirtualClusterInstance"},ManagementV1VirtualClusterInstanceKubeConfig:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"kubeconfig",namespaced:!0,kind:"VirtualClusterInstanceKubeConfig"},ManagementV1VirtualClusterInstanceLog:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"log",namespaced:!0,kind:"VirtualClusterInstanceLog"},ManagementV1VirtualClusterInstanceWorkloadKubeConfig:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"workloadkubeconfig",namespaced:!0,kind:"VirtualClusterInstanceWorkloadKubeConfig"},ManagementV1VirtualClusterTemplate:{group:"management.loft.sh",version:"v1",resource:"virtualclustertemplates",subResource:"",namespaced:!1,kind:"VirtualClusterTemplate"}};var q="virtualcluster.loft.sh",F="v1",fe="virtualcluster.loft.sh/v1",V="cluster.loft.sh",d="v1",he="cluster.loft.sh/v1",Re="management.loft.sh",y="v1",ve="management.loft.sh/v1",be="storage.loft.sh",Me="v1",Ce="storage.loft.sh/v1",H="apiextensions.k8s.io",W="v1",ke="apiextensions.k8s.io/v1",N=class{};var c={...X,ClusterV1SleepModeConfig:{group:V,version:d,resource:"sleepmodeconfigs",kind:"SleepModeConfig",namespaced:!0},ClusterV1Space:{group:V,version:d,resource:"spaces",kind:"Space"},ClusterV1ClusterQuota:{group:V,version:d,resource:"clusterquotas",kind:"ClusterQuota"},ClusterV1HelmRelease:{group:V,version:d,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},ClusterV1VirtualCluster:{group:V,version:d,resource:"virtualclusters",kind:"VirtualCluster",namespaced:!0},ClusterV1LocalClusterAccess:{group:V,version:d,resource:"localclusteraccesses",kind:"LocalClusterAccess"},ClusterV1ChartInfo:{group:V,version:d,resource:"chartinfos",kind:"ChartInfo"},VirtualclusterV1HelmRelease:{group:q,version:F,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},CustomResourceDefinition:{group:H,version:W,resource:"customresourcedefinitions",kind:"CustomResourceDefinition"},PolicyV1beta1JsPolicy:{group:"policy.jspolicy.com",version:"v1beta1",resource:"jspolicies",kind:"JsPolicy"},PolicyV1beta1JsPolicyViolations:{group:"policy.jspolicy.com",version:"v1beta1",resource:"jspolicyviolations",kind:"JsPolicyViolations"},StorageV1VirtualCluster:{group:"storage.loft.sh",version:y,resource:"virtualclusters",kind:"VirtualCluster",namespaced:!0},StorageV1ClusterQuota:{group:"storage.loft.sh",version:y,resource:"clusterquotas",kind:"ClusterQuota"},StorageV1LocalUser:{group:"storage.loft.sh",version:y,resource:"localusers",kind:"LocalUser"},NetworkingV1beta1Ingress:{group:"networking.k8s.io",version:"v1beta1",resource:"ingresses",kind:"Ingress",namespaced:!0},NetworkingV1Ingress:{group:"networking.k8s.io",version:"v1",resource:"ingresses",kind:"Ingress",namespaced:!0},V1StatefulSet:{group:"apps",version:"v1",resource:"statefulsets",kind:"StatefulSet",namespaced:!0},V1Deployment:{group:"apps",version:"v1",resource:"deployments",kind:"Deployment",namespaced:!0},V1Event:{group:"",version:"v1",resource:"events",kind:"Event",namespaced:!0},V1Pod:{group:"",version:"v1",resource:"pods",kind:"Pod",namespaced:!0},V1Node:{group:"",version:"v1",resource:"nodes",kind:"Node"},V1Namespace:{group:"",version:"v1",resource:"namespaces",kind:"Namespace"},V1SelfSubjectAccessReview:{group:"authorization.k8s.io",version:"v1",resource:"selfsubjectaccessreviews",kind:"SelfSubjectAccessReview"},V1ClusterRole:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterroles",kind:"ClusterRole"},V1ClusterRoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterrolebindings",kind:"ClusterRoleBinding"},V1Role:{group:"rbac.authorization.k8s.io",version:"v1",resource:"roles",kind:"Role",namespaced:!0},V1RoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"rolebindings",kind:"RoleBinding",namespaced:!0},V1Secret:{group:"",version:"v1",resource:"secrets",kind:"Secret",namespaced:!0},V1ConfigMap:{group:"",version:"v1",resource:"configmaps",kind:"ConfigMap",namespaced:!0},V1Service:{group:"",version:"v1",resource:"services",kind:"Service",namespaced:!0},V1User:{group:"",version:"v1",resource:"users",kind:"User",namespaced:!1},V1StorageClassList:{group:"storage.k8s.io",version:"v1",resource:"storageclasses",kind:"StorageClass",namespaced:!1},V1Beta1PodMetrics:{group:"metrics.k8s.io",version:"v1beta1",resource:"pods",kind:"PodMetrics",namespaced:!0}};function f(o,e,r){return{apiVersion:o.group?o.group+"/"+o.version:o.version,kind:o.kind,metadata:{name:e},...r}}var S=class{constructor(e,r=void 0){this.val=e;this.extra=r;this.ok=!1;this.err=!0}},P=class{constructor(e,r=void 0){this.val=e;this.extra=r;this.ok=!0;this.err=!1}};function ye(o){return"ok"in o&&typeof o.ok=="boolean"&&"err"in o&&typeof o.err=="boolean"}var E="",O="Network",Y="Forbidden",Z="BadRequest",L="NotFound",U="Unauthorized",ee="AlreadyExists",re="InternalServerError",se="NotImplemented",te="BadGateway",T="ServiceUnavailable",ne="GatewayTimeout",b=o=>{switch(o){case 400:return Z;case 401:return U;case 403:return Y;case 404:return L;case 409:return ee;case 500:return re;case 501:return se;case 502:return te;case 503:return T;case 504:return ne}return E},a=class{static Ok(){return new P(void 0)}static Value(e){return new P(e)}static Failed(e,r="",s=E,t=void 0){return new S(new x(e,s,r),t)}static Error(e){return new S(e)}static WithExtra(e,r=void 0){return e.extra=r,e}},x=class{constructor(e,r=E,s=""){this.message=e;this.type=r;this.reason=s}};var w={secure:!0,expires:365*10,sameSite:"strict"},h=G.loftAccessKeyIdentifier,M=G.loftImpersonateSubjectIdentifier,I=G.loftImpersonateJoinedGroupIdentifier,Se=["v4.channel.k8s.io","v3.channel.k8s.io","v2.channel.k8s.io","channel.k8s.io"];function B(){return typeof window<"u"&&window.location.href.startsWith("http://localhost:3000")?"https://localhost:9898":""}function Pe(){return typeof window>"u"||window.location.host==="localhost:3000"?"wss://localhost:8080":`${window.location.protocol==="https:"?"wss":"ws"}://${window.location.host}`}function oe(o){return[o.virtualCluster?"loft:vcluster:main":`loft:space:${o.project}:${o.space}`]}var J="/kubernetes/management",j="/kubernetes/cluster/",$="/kubernetes/virtualcluster/",_="/kubernetes/project/";function Te(o){return o?"loft-p-"+o:"loft-p-"}var k=class{constructor(e,r,s){this.apiHost="";this.wsHost="";this.accessKey="";this.managementNonResource=()=>new l(this,{basePath:J,headers:this.impersonationHeaders()});this.cluster=(e,r)=>new l(this,{basePath:j+e,groupVersionResource:r,headers:this.impersonationHeaders()});this.clusterNonResource=e=>new l(this,{basePath:j+e,headers:this.impersonationHeaders()});this.project=(e,r)=>new l(this,{basePath:_+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),groupVersionResource:r,project:e,headers:this.impersonationHeaders(oe(e))});this.projectNonResource=e=>new l(this,{basePath:_+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),project:e,headers:this.impersonationHeaders(oe(e))});this.apiHost=r||B(),this.wsHost=s||Pe(),this.accessKey=e||k.getAccessKey()}static getAccessKey(){return localStorage.getItem(h)}static tryCastToStatus(e){if(e.kind){if(e.kind!=="Status"||e.apiVersion!=="v1")return a.Value(null)}else return a.Value(null);return a.Value(e)}async getUser(){let e=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));return e.err?e:e.val.status?.user?(typeof window<"u"&&(window.loft||(window.loft={}),window.loft.instanceID=e.val.status.instanceID,window.loft.intercomHash=e.val.status.intercomHash,window.loft.user=e.val.status.user),a.Value(e.val.status.user.name)):a.Failed("no user found")}getAccessKey(){return this.accessKey}async loftVersion(e){try{let r=B()+"/version";e&&(r+="?refresh=true");let t=await(await fetch(r)).json();return a.Value(t)}catch(r){return console.error(r),a.Failed("error during version retrieval")}}impersonatedUser(){try{let e=localStorage.getItem(M);if(e)return JSON.parse(e)}catch(e){console.error(e)}}impersonate(e,r,s){r?(localStorage.setItem(M,JSON.stringify({name:e,subject:r,groups:s})),r&&p.default.set(M,r,w),s?.forEach(t=>{let n=p.default.get(I);n?(n+=", "+t,p.default.set(I,n,w)):p.default.set(I,t,w)})):(localStorage.removeItem(M),p.default.remove(M),p.default.remove(I))}async login(e,r){let s=await this.request("/auth/password/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:r})});if(s.err)return s;let t=s.val;return this.setAccessKey(t.accessKey),a.Ok()}async loginWithAccessKey(e){this.isLoggedIn()&&await this.logout(),this.accessKey=e;let r=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));return r.err?(this.clearStorage(),r):(this.setAccessKey(e),a.Ok())}isLoggedIn(){return!!this.accessKey}setAccessKey(e){this.accessKey=e,localStorage.setItem(h,e),p.default.set(h,e,w)}async stream(e,r){try{let s=await fetch(this.apiHost+e,r);return s.status>=400||!s.body?await this.parseResponse(e,s):a.Value(s.body.getReader())}catch(s){return a.Failed(s+"","NetworkError",O)}}async request(e,r){try{let s=await fetch(this.apiHost+e,{...r,credentials:"same-origin"});return await this.parseResponse(e,s)}catch(s){return a.Failed(s+"","NetworkError",O)}}async socket(e){return this.refreshCookie(),new Promise((r,s)=>{let t=new WebSocket(`${this.wsHost}${e}`,Se),n=!1;t.onopen=()=>{n=!0,r(t)},t.onerror=u=>{if(!n){let i=p.default.get(h)!="";s(i?u:new Error("Web socket is not authenticated. Please log in again"))}}})}async parseResponse(e,r){let s=await r.text(),t;try{t=JSON.parse(s)}catch{if(r.status===404)return a.Failed("page not found","NotFound",L);if(r.status===503){if(e.includes("kiosk.sh")||e.includes("cluster.loft.sh")){let i=e.split("/");return i.length>=4&&i[0]===""&&i[1]==="kubernetes"&&i[2]==="cluster"?a.Failed(`Loft-agent seems to be currently unavailable, it is maybe just starting up. Click <a href="/spaces/${i[3]}/loft">here</a> for more information</span>`,"LoftAgentUnavailable",T):a.Failed("loft-agent seems to be currently unavailable, it is maybe just starting up","LoftAgentUnavailable",T)}}else if(r.status===200)return a.Value(s);return console.info("Unexpected Server Response",s),a.Failed("Unexpected server response",b(r.status),b(r.status))}let n=k.tryCastToStatus(t);return n.err?n:n.val!==null&&n.val.status==="Failure"?n.val.code===500&&(n.val.message?.indexOf("vcluster secret not found")!==-1||n.val.message.indexOf("no ready pod for virtual cluster")!==-1)?a.Failed("vcluster seems to be not ready. Please refresh in a second",n.val.reason,b(n.val.code)):a.Failed(n.val.message,n.val.reason,b(n.val.code)):r.status>=400?a.Failed("unknown error","Unknown",b(r.status)):a.Value(t)}management(e){return new l(this,{basePath:J,groupVersionResource:e,headers:this.impersonationHeaders()})}vCluster(e,r){return new l(this,{basePath:$+e.cluster+"/"+e.namespace+"/"+e.name,groupVersionResource:r,vCluster:e,headers:this.impersonationHeaders()})}vClusterNonResource(e){return new l(this,{basePath:$+e.cluster+"/"+e.namespace+"/"+e.name,vCluster:e,headers:this.impersonationHeaders()})}auto(e,r,s,t){return s?this.project(s,t):r?this.vCluster(r,t):e?this.cluster(e,t):this.management(t)}autoNonResource(e,r,s){return s?this.projectNonResource(s):r?this.vClusterNonResource(r):e?this.clusterNonResource(e):this.managementNonResource()}async doRawSocket(e){try{return a.Value(await this.socket(e))}catch(r){return console.error(r),a.Failed(r.message||JSON.stringify(r))}}async doRawStream(e,r,s){return this.doRawInternal(e,r,s,!0)}async doRaw(e,r,s){return this.doRawInternal(e,r,s)}async doRawInternal(e,r,s,t){let n=this.accessKey,u=n?new Headers({...s,Authorization:"bearer "+n,"X-Sleep-Mode-Ignore":"true"}):new Headers({...s,"X-Sleep-Mode-Ignore":"true"}),i=t?await this.stream(e,{...r,headers:u}):await this.request(e,{...r,headers:u});return i.err&&i.val.type===U&&(i.val.message==="loft access key not found. Please login again"||i.val.message==="invalid bearer token")&&(this.clearStorage(),typeof window<"u"&&(window.location.href="/"),await new Promise(()=>{})),i}impersonationHeaders(e){let r=this.impersonatedUser(),s={};return r&&(r.subject&&(s["Impersonate-User"]=r.subject),[...v(r.groups),...v(e)].forEach(t=>{s["Impersonate-Joined-Group"]?s["Impersonate-Joined-Group"]+=", "+t:s["Impersonate-Joined-Group"]=t})),s}clearStorage(){this.accessKey=null,localStorage.removeItem(h),localStorage.removeItem(M),p.default.remove(h,{secure:!0}),p.default.remove(M,{secure:!0}),p.default.remove(I,{secure:!0})}refreshCookie(){let e=this.accessKey||localStorage.getItem(h),r=p.default.get(h);e&&e!=r&&p.default.set(h,e,w)}async logout(){let e=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));if(e.err)return this.clearStorage(),e;if(!e.val.status?.accessKey)return this.clearStorage(),a.Ok();let r=await this.management(c.ManagementV1OwnedAccessKey).Delete(e.val.status.accessKey);return r.err?(this.clearStorage(),r):(this.clearStorage(),a.Ok())}},l=class{constructor(e,r){this.client=e,this.options=r}Name(e){return new l(this.client,{...this.options,name:e})}Namespace(e){return e?new l(this.client,{...this.options,namespace:e}):new l(this.client,{...this.options})}Resource(e){return new l(this.client,{...this.options,groupVersionResource:e})}buildPath(e){if(this.options.groupVersionResource)if(this.options.basePath){if(!this.options.name&&this.options.groupVersionResource.subResource)return a.Failed("resource name required when subresource is used")}else return a.Failed("basePath is missing");else return a.Failed("groupVersionResource is missing");let r=[this.options.basePath];this.options.groupVersionResource.group?r.push("apis",this.options.groupVersionResource.group):r.push("api"),r.push(this.options.groupVersionResource.version),this.options.namespace&&r.push("namespaces",this.options.namespace),r.push(this.options.groupVersionResource.resource),this.options.name&&r.push(this.options.name),this.options.groupVersionResource.subResource&&r.push(this.options.groupVersionResource.subResource);let s="";if(e){let t=[];for(let n of Object.keys(e))e[n]&&(Array.isArray(e[n])?e[n].forEach(u=>{t.push(n+"="+encodeURIComponent(u))}):t.push(n+"="+encodeURIComponent(e[n])));t.length>0&&(s="?"+t.join("&"))}else s="?timeout=180s";return a.Value(r.join("/")+s)}parseResourceList(e,r,s,t,n,u){for(let i=0;i<v(s.resources).length;i++){let g=s.resources[i];if(g===void 0)continue;let m=g.name.split("/"),R=m[0]??"";!u&&m.length>1||n&&t.find(C=>C.group===e&&C.resource===R)||t.push({resource:R,subResource:m.length>1?m[1]:void 0,group:e,version:r,kind:g.kind,namespaced:g.namespaced,verbs:g.verbs})}}async ApiResources(e,r){let s=[],t=await this.client.doRaw([this.options.basePath,"api"].join("/"));if(t.err)return t;let n=[];for(let i=0;i<v(t.val.versions).length;i++)n.push((async g=>{let m=t.val.versions[g];if(m===void 0)return;let R=await this.client.doRaw([this.options.basePath,"api",m].join("/"));if(R.err){console.error(R.val.message);return}this.parseResourceList("",m,R.val,s,e,r)})(i)),n.length>20&&(await Promise.all(n),n=[]);n.length>0&&(await Promise.all(n),n=[]);let u=await this.client.doRaw([this.options.basePath,"apis"].join("/"));if(u.err)return u;for(let i=0;i<v(u.val.groups).length;i++){let g=u.val.groups[i];if(g!==void 0)for(let m=0;m<v(g.versions).length;m++)n.push((async(R,C)=>{let K=C.versions[R];if(K===void 0)return;let D=await this.client.doRaw([this.options.basePath,"apis",C.name,K.version].join("/"));if(D.err){console.error(D.val.message);return}this.parseResourceList(C.name,K.version,D.val,s,e,r)})(m,g)),n.length>20&&(await Promise.all(n),n=[])}return n.length>0&&await Promise.all(n),a.Value(s)}async Version(){let e=[this.options.basePath,"version"];return await this.client.doRaw(e.join("/"))}async VirtualClusterInstanceLogs(e,r,s){let t=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/virtualclusterinstances/${r}/log`].join("/"),n=[];if(s)for(let u of Object.keys(s))n.push(`${u}=${encodeURIComponent(s[u])}`);return n.length>0&&(t+="?"+n.join("&")),await this.client.doRawStream(t,void 0,this.options.headers)}async TaskLogs(e,r){let s=[this.options.basePath,`apis/management.loft.sh/v1/tasks/${e}/log`].join("/"),t=[];if(r)for(let n of Object.keys(r))t.push(`${n}=${encodeURIComponent(r[n])}`);return t.length>0&&(s+="?"+t.join("&")),await this.client.doRawStream(s,void 0,this.options.headers)}async Logs(e,r,s){let t=[this.options.basePath,`api/v1/namespaces/${e}/pods/${r}/log`].join("/"),n=ae(s);return n.length>0&&(t+="?"+n),await this.client.doRawStream(t,void 0,this.options.headers)}async Exec(e,r,s){let t=[this.options.basePath,`api/v1/namespaces/${e}/pods/${r}/exec`].join("/"),n=ae(s);return n.length>0&&(t+="?"+n),await this.client.doRawSocket(t)}async Path(e,r,s){let t=[this.options.basePath,e];return await this.client.doRaw(t.join("/"),r,{...s,...this.options.headers})}async Get(e,r){this.options.name=e;let s=this.buildPath(r);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,void 0,this.options.headers),this.options)}async List(e){if(this.options.name)return a.Failed("name is set on a list request");let r=this.buildPath(e);return r.err?r:a.WithExtra(await this.client.doRaw(r.val,void 0,this.options.headers),this.options)}async ListTable(e){if(this.options.name)return a.Failed("name is set on a list request");let r=this.buildPath(e);return r.err?r:a.WithExtra(await this.client.doRaw(r.val,void 0,{...this.options.headers,Accept:"application/json;as=Table;v=v1;g=meta.k8s.io,application/json;as=Table;v=v1beta1;g=meta.k8s.io,application/json"}),this.options)}async Create(e,r){let s=this.buildPath(r);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,{method:"POST",body:JSON.stringify(e)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async PatchObject(e,r,s,t){let n=ie.default.generate(e,r);return this.Patch(r.metadata?.name,n,s,t)}async Patch(e,r,s,t){this.options.name=e;let n=this.buildPath(t);return n.err?n:a.WithExtra(await this.client.doRaw(n.val,{method:"PATCH",body:JSON.stringify(r,function(u,i){return i===void 0?null:i})},{...this.options.headers,"Content-Type":s||"application/merge-patch+json"}),this.options)}async Update(e,r,s){this.options.name=e;let t=this.buildPath(s);return t.err?t:a.WithExtra(await this.client.doRaw(t.val,{method:"PUT",body:JSON.stringify(r)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async Delete(e,r){this.options.name=e;let s=this.buildPath(r);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,{method:"DELETE"},this.options.headers),this.options)}async CanI(e){let r=this.options.groupVersionResource,s=this.options.basePath?.indexOf(j)===0?this.options.basePath.substring(j.length):void 0,t,n;this.options.project?(t=this.client.project(this.options.project,c.V1SelfSubjectAccessReview),n=f(c.V1SelfSubjectAccessReview)):this.options.vCluster?(t=this.client.vCluster(this.options.vCluster,c.V1SelfSubjectAccessReview),n=f(c.V1SelfSubjectAccessReview)):s?(t=this.client.cluster(s,c.V1SelfSubjectAccessReview),n=f(c.V1SelfSubjectAccessReview)):(t=this.client.management(c.ManagementV1SelfSubjectAccessReview),n=f(c.ManagementV1SelfSubjectAccessReview)),n.spec={resourceAttributes:{verb:e,name:this.options.name,namespace:this.options.namespace,group:r.group,version:r.version,resource:r.resource,subresource:r.subResource}};let u=await t.Create(n);return u.err?u:a.Value(!!(u.val.status?.allowed&&!u.val.status.denied))}};function ae(o){let e=new URLSearchParams;for(let[r,s]of Object.entries(o))Array.isArray(s)?s.forEach(t=>{e.append(r,t)}):e.append(r,s);return e.toString()}var ue=k;0&&(module.exports={APIExtensionsGroup,APIExtensionsGroupVersion,APIExtensionsVersion,Client,ClusterBasePath,Err,ErrorTypeAlreadyExists,ErrorTypeBadGateway,ErrorTypeBadRequest,ErrorTypeForbidden,ErrorTypeGatewayTimeout,ErrorTypeInternalError,ErrorTypeNetwork,ErrorTypeNotFound,ErrorTypeNotImplemented,ErrorTypeServiceUnavailable,ErrorTypeUnauthorized,ErrorTypeUnknown,Failed,List,LoftSchemeGroup,LoftSchemeGroupCluster,LoftSchemeGroupStorage,LoftSchemeGroupVersion,LoftSchemeGroupVersionCluster,LoftSchemeGroupVersionStorage,LoftSchemeGroupVersionVirtualCluster,LoftSchemeGroupVirtualCluster,LoftSchemeVersion,LoftSchemeVersionCluster,LoftSchemeVersionStorage,LoftSchemeVersionVirtualCluster,ManagementBasePath,MapErrorCode,NewResource,Ok,ProjectBasePath,Resources,Return,VClusterBasePath,getApiHost,getProjectNamespace,isResult});
