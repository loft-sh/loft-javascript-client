"use strict";var ce=Object.create;var G=Object.defineProperty;var le=Object.getOwnPropertyDescriptor;var pe=Object.getOwnPropertyNames;var me=Object.getPrototypeOf,ge=Object.prototype.hasOwnProperty;var de=(o,e)=>{for(var s in e)G(o,s,{get:e[s],enumerable:!0})},_=(o,e,s,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of pe(e))!ge.call(o,r)&&r!==s&&G(o,r,{get:()=>e[r],enumerable:!(t=le(e,r))||t.enumerable});return o};var z=(o,e,s)=>(s=o!=null?ce(me(o)):{},_(e||!o||!o.__esModule?G(s,"default",{value:o,enumerable:!0}):s,o)),Ve=o=>_(G({},"__esModule",{value:!0}),o);var Ie={};de(Ie,{APIExtensionsGroup:()=>F,APIExtensionsGroupVersion:()=>Ce,APIExtensionsVersion:()=>B,Client:()=>ue,ClusterBasePath:()=>j,Err:()=>P,ErrorTypeAlreadyExists:()=>Z,ErrorTypeBadGateway:()=>te,ErrorTypeBadRequest:()=>Y,ErrorTypeForbidden:()=>X,ErrorTypeGatewayTimeout:()=>re,ErrorTypeInternalError:()=>ee,ErrorTypeNetwork:()=>D,ErrorTypeNotFound:()=>O,ErrorTypeNotImplemented:()=>se,ErrorTypeServiceUnavailable:()=>w,ErrorTypeUnauthorized:()=>T,ErrorTypeUnknown:()=>x,Failed:()=>E,List:()=>K,LoftSchemeGroup:()=>ve,LoftSchemeGroupCluster:()=>C,LoftSchemeGroupStorage:()=>Me,LoftSchemeGroupVersion:()=>Re,LoftSchemeGroupVersionCluster:()=>he,LoftSchemeGroupVersionStorage:()=>ke,LoftSchemeGroupVersionVirtualCluster:()=>fe,LoftSchemeGroupVirtualCluster:()=>W,LoftSchemeVersion:()=>q,LoftSchemeVersionCluster:()=>y,LoftSchemeVersionStorage:()=>be,LoftSchemeVersionVirtualCluster:()=>N,ManagementBasePath:()=>H,MapErrorCode:()=>v,NewResource:()=>d,Ok:()=>S,ProjectBasePath:()=>J,Resources:()=>c,Return:()=>a,VClusterBasePath:()=>$,getApiHost:()=>ie,getProjectFromNamespace:()=>we,getProjectNamespace:()=>Te,isResult:()=>ye});module.exports=Ve(Ie);var p=z(require("js-cookie")),ae=z(require("json-merge-patch"));var b={loftAccessKeyIdentifier:"loft_access_key",loftImpersonateSubjectIdentifier:"loft_impersonate_subject",loftImpersonateJoinedGroupIdentifier:"loft_impersonate_joined_group",platformAccessKeyNotFound:"platform access key not found. Please login again"};function h(o){return o||[]}var Q={ManagementV1AgentAuditEvent:{group:"management.loft.sh",version:"v1",resource:"agentauditevents",subResource:"",namespaced:!1,kind:"AgentAuditEvent"},ManagementV1Announcement:{group:"management.loft.sh",version:"v1",resource:"announcements",subResource:"",namespaced:!1,kind:"Announcement"},ManagementV1App:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"",namespaced:!1,kind:"App"},ManagementV1AppCredentials:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"credentials",namespaced:!1,kind:"AppCredentials"},ManagementV1Backup:{group:"management.loft.sh",version:"v1",resource:"backups",subResource:"",namespaced:!1,kind:"Backup"},ManagementV1BackupApply:{group:"management.loft.sh",version:"v1",resource:"backups",subResource:"apply",namespaced:!1,kind:"BackupApply"},ManagementV1Cluster:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"",namespaced:!1,kind:"Cluster"},ManagementV1ClusterAccess:{group:"management.loft.sh",version:"v1",resource:"clusteraccesses",subResource:"",namespaced:!1,kind:"ClusterAccess"},ManagementV1ClusterAccessKey:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"accesskey",namespaced:!1,kind:"ClusterAccessKey"},ManagementV1ClusterAgentConfig:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"agentconfig",namespaced:!1,kind:"ClusterAgentConfig"},ManagementV1ClusterCharts:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"charts",namespaced:!1,kind:"ClusterCharts"},ManagementV1ClusterDomain:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"domain",namespaced:!1,kind:"ClusterDomain"},ManagementV1ClusterMemberAccess:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"memberaccess",namespaced:!1,kind:"ClusterMemberAccess"},ManagementV1ClusterMembers:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"members",namespaced:!1,kind:"ClusterMembers"},ManagementV1ClusterReset:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"reset",namespaced:!1,kind:"ClusterReset"},ManagementV1ClusterRoleTemplate:{group:"management.loft.sh",version:"v1",resource:"clusterroletemplates",subResource:"",namespaced:!1,kind:"ClusterRoleTemplate"},ManagementV1ClusterVirtualClusterDefaults:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"virtualclusterdefaults",namespaced:!1,kind:"ClusterVirtualClusterDefaults"},ManagementV1Config:{group:"management.loft.sh",version:"v1",resource:"configs",subResource:"",namespaced:!1,kind:"Config"},ManagementV1ConvertVirtualClusterConfig:{group:"management.loft.sh",version:"v1",resource:"convertvirtualclusterconfig",subResource:"",namespaced:!1,kind:"ConvertVirtualClusterConfig"},ManagementV1DevPodEnvironmentTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodenvironmenttemplates",subResource:"",namespaced:!1,kind:"DevPodEnvironmentTemplate"},ManagementV1DevPodWorkspaceInstance:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"",namespaced:!0,kind:"DevPodWorkspaceInstance"},ManagementV1DevPodWorkspaceInstanceCancel:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"cancel",namespaced:!0,kind:"DevPodWorkspaceInstanceCancel"},ManagementV1DevPodWorkspaceInstanceLog:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"log",namespaced:!0,kind:"DevPodWorkspaceInstanceLog"},ManagementV1DevPodWorkspaceInstanceStop:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"stop",namespaced:!0,kind:"DevPodWorkspaceInstanceStop"},ManagementV1DevPodWorkspaceInstanceTasks:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"tasks",namespaced:!0,kind:"DevPodWorkspaceInstanceTasks"},ManagementV1DevPodWorkspaceInstanceTroubleshoot:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"troubleshoot",namespaced:!0,kind:"DevPodWorkspaceInstanceTroubleshoot"},ManagementV1DevPodWorkspaceInstanceUp:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"up",namespaced:!0,kind:"DevPodWorkspaceInstanceUp"},ManagementV1DevPodWorkspacePreset:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacepresets",subResource:"",namespaced:!1,kind:"DevPodWorkspacePreset"},ManagementV1DevPodWorkspaceTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacetemplates",subResource:"",namespaced:!1,kind:"DevPodWorkspaceTemplate"},ManagementV1DirectClusterEndpointToken:{group:"management.loft.sh",version:"v1",resource:"directclusterendpointtokens",subResource:"",namespaced:!1,kind:"DirectClusterEndpointToken"},ManagementV1Event:{group:"management.loft.sh",version:"v1",resource:"events",subResource:"",namespaced:!1,kind:"Event"},ManagementV1Feature:{group:"management.loft.sh",version:"v1",resource:"features",subResource:"",namespaced:!1,kind:"Feature"},ManagementV1IngressAuthToken:{group:"management.loft.sh",version:"v1",resource:"ingressauthtokens",subResource:"",namespaced:!1,kind:"IngressAuthToken"},ManagementV1Kiosk:{group:"management.loft.sh",version:"v1",resource:"kiosk",subResource:"",namespaced:!1,kind:"Kiosk"},ManagementV1License:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"",namespaced:!1,kind:"License"},ManagementV1LicenseRequest:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"request",namespaced:!1,kind:"LicenseRequest"},ManagementV1LicenseToken:{group:"management.loft.sh",version:"v1",resource:"licensetokens",subResource:"",namespaced:!1,kind:"LicenseToken"},ManagementV1LoftUpgrade:{group:"management.loft.sh",version:"v1",resource:"loftupgrades",subResource:"",namespaced:!1,kind:"LoftUpgrade"},ManagementV1OIDCClient:{group:"management.loft.sh",version:"v1",resource:"oidcclients",subResource:"",namespaced:!1,kind:"OIDCClient"},ManagementV1OwnedAccessKey:{group:"management.loft.sh",version:"v1",resource:"ownedaccesskeys",subResource:"",namespaced:!1,kind:"OwnedAccessKey"},ManagementV1Project:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"",namespaced:!1,kind:"Project"},ManagementV1ProjectChartInfo:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"chartinfo",namespaced:!1,kind:"ProjectChartInfo"},ManagementV1ProjectCharts:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"charts",namespaced:!1,kind:"ProjectCharts"},ManagementV1ProjectClusters:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"clusters",namespaced:!1,kind:"ProjectClusters"},ManagementV1ProjectImportSpace:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"importspace",namespaced:!1,kind:"ProjectImportSpace"},ManagementV1ProjectMembers:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"members",namespaced:!1,kind:"ProjectMembers"},ManagementV1ProjectMigrateSpaceInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratespaceinstance",namespaced:!1,kind:"ProjectMigrateSpaceInstance"},ManagementV1ProjectMigrateVirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratevirtualclusterinstance",namespaced:!1,kind:"ProjectMigrateVirtualClusterInstance"},ManagementV1ProjectSecret:{group:"management.loft.sh",version:"v1",resource:"projectsecrets",subResource:"",namespaced:!0,kind:"ProjectSecret"},ManagementV1ProjectTemplates:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"templates",namespaced:!1,kind:"ProjectTemplates"},ManagementV1RedirectToken:{group:"management.loft.sh",version:"v1",resource:"redirecttokens",subResource:"",namespaced:!1,kind:"RedirectToken"},ManagementV1RegisterVirtualCluster:{group:"management.loft.sh",version:"v1",resource:"registervirtualclusters",subResource:"",namespaced:!1,kind:"RegisterVirtualCluster"},ManagementV1ResetAccessKey:{group:"management.loft.sh",version:"v1",resource:"resetaccesskeys",subResource:"",namespaced:!1,kind:"ResetAccessKey"},ManagementV1Self:{group:"management.loft.sh",version:"v1",resource:"selves",subResource:"",namespaced:!1,kind:"Self"},ManagementV1SelfSubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"selfsubjectaccessreviews",subResource:"",namespaced:!1,kind:"SelfSubjectAccessReview"},ManagementV1SharedSecret:{group:"management.loft.sh",version:"v1",resource:"sharedsecrets",subResource:"",namespaced:!0,kind:"SharedSecret"},ManagementV1SpaceInstance:{group:"management.loft.sh",version:"v1",resource:"spaceinstances",subResource:"",namespaced:!0,kind:"SpaceInstance"},ManagementV1SpaceTemplate:{group:"management.loft.sh",version:"v1",resource:"spacetemplates",subResource:"",namespaced:!1,kind:"SpaceTemplate"},ManagementV1SubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"subjectaccessreviews",subResource:"",namespaced:!1,kind:"SubjectAccessReview"},ManagementV1Task:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"",namespaced:!1,kind:"Task"},ManagementV1TaskLog:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"log",namespaced:!1,kind:"TaskLog"},ManagementV1Team:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"",namespaced:!1,kind:"Team"},ManagementV1TeamAccessKeys:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"accesskeys",namespaced:!1,kind:"TeamAccessKeys"},ManagementV1TeamClusters:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"clusters",namespaced:!1,kind:"TeamClusters"},ManagementV1TranslateVClusterResourceName:{group:"management.loft.sh",version:"v1",resource:"translatevclusterresourcenames",subResource:"",namespaced:!1,kind:"TranslateVClusterResourceName"},ManagementV1User:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"",namespaced:!1,kind:"User"},ManagementV1UserAccessKeys:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"accesskeys",namespaced:!1,kind:"UserAccessKeys"},ManagementV1UserClusters:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"clusters",namespaced:!1,kind:"UserClusters"},ManagementV1UserDetailedPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"detailed-permissions",namespaced:!1,kind:"UserDetailedPermissions"},ManagementV1UserPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"permissions",namespaced:!1,kind:"UserPermissions"},ManagementV1UserProfile:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"profile",namespaced:!1,kind:"UserProfile"},ManagementV1VirtualClusterAccessKey:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"accesskey",namespaced:!0,kind:"VirtualClusterAccessKey"},ManagementV1VirtualClusterExternalDatabase:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"externaldatabase",namespaced:!0,kind:"VirtualClusterExternalDatabase"},ManagementV1VirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"",namespaced:!0,kind:"VirtualClusterInstance"},ManagementV1VirtualClusterInstanceKubeConfig:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"kubeconfig",namespaced:!0,kind:"VirtualClusterInstanceKubeConfig"},ManagementV1VirtualClusterInstanceLog:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"log",namespaced:!0,kind:"VirtualClusterInstanceLog"},ManagementV1VirtualClusterSchema:{group:"management.loft.sh",version:"v1",resource:"virtualclusterschemas",subResource:"",namespaced:!1,kind:"VirtualClusterSchema"},ManagementV1VirtualClusterTemplate:{group:"management.loft.sh",version:"v1",resource:"virtualclustertemplates",subResource:"",namespaced:!1,kind:"VirtualClusterTemplate"}};var W="virtualcluster.loft.sh",N="v1",fe="virtualcluster.loft.sh/v1",C="cluster.loft.sh",y="v1",he="cluster.loft.sh/v1",ve="management.loft.sh",q="v1",Re="management.loft.sh/v1",Me="storage.loft.sh",be="v1",ke="storage.loft.sh/v1",F="apiextensions.k8s.io",B="v1",Ce="apiextensions.k8s.io/v1",K=class{};var c={...Q,ClusterV1SleepModeConfig:{group:C,version:y,resource:"sleepmodeconfigs",kind:"SleepModeConfig",namespaced:!0},ClusterV1HelmRelease:{group:C,version:y,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},ClusterV1ChartInfo:{group:C,version:y,resource:"chartinfos",kind:"ChartInfo"},VirtualclusterV1HelmRelease:{group:W,version:N,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},CustomResourceDefinition:{group:F,version:B,resource:"customresourcedefinitions",kind:"CustomResourceDefinition"},StorageV1ClusterQuota:{group:"storage.loft.sh",version:q,resource:"clusterquotas",kind:"ClusterQuota"},NetworkingV1Ingress:{group:"networking.k8s.io",version:"v1",resource:"ingresses",kind:"Ingress",namespaced:!0},V1StatefulSet:{group:"apps",version:"v1",resource:"statefulsets",kind:"StatefulSet",namespaced:!0},V1Deployment:{group:"apps",version:"v1",resource:"deployments",kind:"Deployment",namespaced:!0},V1Event:{group:"",version:"v1",resource:"events",kind:"Event",namespaced:!0},V1Pod:{group:"",version:"v1",resource:"pods",kind:"Pod",namespaced:!0},V1Node:{group:"",version:"v1",resource:"nodes",kind:"Node"},V1Namespace:{group:"",version:"v1",resource:"namespaces",kind:"Namespace"},V1SelfSubjectAccessReview:{group:"authorization.k8s.io",version:"v1",resource:"selfsubjectaccessreviews",kind:"SelfSubjectAccessReview"},V1ClusterRole:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterroles",kind:"ClusterRole"},V1ClusterRoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterrolebindings",kind:"ClusterRoleBinding"},V1Role:{group:"rbac.authorization.k8s.io",version:"v1",resource:"roles",kind:"Role",namespaced:!0},V1RoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"rolebindings",kind:"RoleBinding",namespaced:!0},V1Secret:{group:"",version:"v1",resource:"secrets",kind:"Secret",namespaced:!0},V1ConfigMap:{group:"",version:"v1",resource:"configmaps",kind:"ConfigMap",namespaced:!0},V1Service:{group:"",version:"v1",resource:"services",kind:"Service",namespaced:!0},V1User:{group:"",version:"v1",resource:"users",kind:"User",namespaced:!1},V1StorageClassList:{group:"storage.k8s.io",version:"v1",resource:"storageclasses",kind:"StorageClass",namespaced:!1},V1Beta1PodMetrics:{group:"metrics.k8s.io",version:"v1beta1",resource:"pods",kind:"PodMetrics",namespaced:!0}};function d(o,e,s){return{apiVersion:o.group?o.group+"/"+o.version:o.version,kind:o.kind,metadata:{name:e},...s}}var P=class{constructor(e,s=void 0){this.val=e;this.extra=s;this.ok=!1;this.err=!0}},S=class{constructor(e,s=void 0){this.val=e;this.extra=s;this.ok=!0;this.err=!1}};function ye(o){return"ok"in o&&typeof o.ok=="boolean"&&"err"in o&&typeof o.err=="boolean"}var x="",D="Network",X="Forbidden",Y="BadRequest",O="NotFound",T="Unauthorized",Z="AlreadyExists",ee="InternalServerError",se="NotImplemented",te="BadGateway",w="ServiceUnavailable",re="GatewayTimeout",v=o=>{switch(o){case 400:return Y;case 401:return T;case 403:return X;case 404:return O;case 409:return Z;case 500:return ee;case 501:return se;case 502:return te;case 503:return w;case 504:return re}return x},a=class{static Ok(){return new S(void 0)}static Value(e){return new S(e)}static Failed(e,s="",t=x,r=void 0){return new P(new E(e,t,s),r)}static Error(e){return new P(e)}static WithExtra(e,s=void 0){return e.extra=s,e}},E=class{constructor(e,s=x,t=""){this.message=e;this.type=s;this.reason=t}};var I={secure:!0,expires:365*10,sameSite:"strict"},V=b.loftAccessKeyIdentifier,R=b.loftImpersonateSubjectIdentifier,A=b.loftImpersonateJoinedGroupIdentifier,Pe=["v4.channel.k8s.io","v3.channel.k8s.io","v2.channel.k8s.io","channel.k8s.io"];function ie(){return typeof window<"u"&&window.location.href.startsWith("http://localhost:3000")?"https://localhost:9898":""}function Se(){return typeof window>"u"||window.location.host==="localhost:3000"?"wss://localhost:8080":`${window.location.protocol==="https:"?"wss":"ws"}://${window.location.host}`}function ne(o){return[o.virtualCluster?"loft:vcluster:main":`loft:space:${o.project}:${o.space}`]}var H="/kubernetes/management",j="/kubernetes/cluster/",$="/kubernetes/virtualcluster/",J="/kubernetes/project/",Te=(o,e)=>o?e?`${e}${o}`:`p-${o}`:"p-";function we(o,e){if(o)return e?e.endsWith("-")?o.replace(new RegExp(`^${e}`),""):o.replace(new RegExp(`^${e}-`),""):o.replace(/^p-/,"")}var k=class{constructor(e,s,t){this.apiHost="";this.wsHost="";this.accessKey="";this.managementNonResource=()=>new l(this,{basePath:H,headers:this.impersonationHeaders()});this.cluster=(e,s)=>new l(this,{basePath:j+e,groupVersionResource:s,headers:this.impersonationHeaders()});this.clusterNonResource=e=>new l(this,{basePath:j+e,headers:this.impersonationHeaders()});this.project=(e,s)=>new l(this,{basePath:J+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),groupVersionResource:s,project:e,headers:this.impersonationHeaders(ne(e))});this.projectNonResource=e=>new l(this,{basePath:J+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),project:e,headers:this.impersonationHeaders(ne(e))});this.apiHost=s||ie(),this.wsHost=t||Se(),this.accessKey=e||k.getAccessKey()}static getAccessKey(){return localStorage.getItem(V)}static tryCastToStatus(e){if(e.kind){if(e.kind!=="Status"||e.apiVersion!=="v1")return a.Value(null)}else return a.Value(null);return a.Value(e)}async getUser(){let e=await this.management(c.ManagementV1Self).Create(d(c.ManagementV1Self));return e.err?e:e.val.status?.user?(typeof window<"u"&&(window.loft||(window.loft={}),window.loft.instanceID=e.val.status.instanceID,window.loft.chatAuthToken=e.val.status.chatAuthToken,window.loft.user=e.val.status.user),a.Value(e.val.status.user.name)):a.Failed("no user found")}getAccessKey(){return this.accessKey}async loftVersion(e){try{let s=this.apiHost+"/version";e&&(s+="?refresh=true");let r=await(await fetch(s)).json();return a.Value(r)}catch(s){return console.error(s),a.Failed("error during version retrieval")}}impersonatedUser(){try{let e=localStorage.getItem(R);if(e)return JSON.parse(e)}catch(e){console.error(e)}}impersonate(e,s,t){s?(localStorage.setItem(R,JSON.stringify({name:e,subject:s,groups:t})),s&&p.default.set(R,s,I),t?.forEach(r=>{let n=p.default.get(A);n?(n+=", "+r,p.default.set(A,n,I)):p.default.set(A,r,I)})):(localStorage.removeItem(R),p.default.remove(R),p.default.remove(A))}async login(e,s){let t=await this.request("/auth/password/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:s})});if(t.err)return t;let r=t.val;return this.setAccessKey(r.accessKey),a.Ok()}async loginWithAccessKey(e){this.isLoggedIn()&&await this.logout(),this.accessKey=e;let s=await this.management(c.ManagementV1Self).Create(d(c.ManagementV1Self));return s.err?(this.clearStorage(),s):(this.setAccessKey(e),a.Ok())}isLoggedIn(){return!!this.accessKey}setAccessKey(e){this.accessKey=e,localStorage.setItem(V,e),p.default.set(V,e,I)}async stream(e,s){try{let t=await fetch(this.apiHost+e,s);return t.status>=400||!t.body?await this.parseResponse(e,t):a.Value(t.body.getReader())}catch(t){return a.Failed(t+"","NetworkError",D)}}async request(e,s){try{let t=await fetch(this.apiHost+e,{...s,credentials:"same-origin"});if(!t.ok){let n=await t.clone().text();if(t.status===401)try{let i=JSON.parse(n);if(i?.message===b.platformAccessKeyNotFound)return a.Failed(i.message||"Unauthorized",i.reason,T)}catch{}}return await this.parseResponse(e,t)}catch(t){let r=t;return r.message===b.platformAccessKeyNotFound&&(window.location.href=`/login?error=${r.message}&errorType=${r.reason}`),a.Failed(t+"","NetworkError",D)}}async socket(e,s){return this.refreshCookie(),new Promise((t,r)=>{let n=new WebSocket(`${this.wsHost}${e}`,s),i=!1;n.onopen=()=>{i=!0,t(n)},n.onerror=u=>{if(!i){let m=p.default.get(V)!="";r(m?u:new Error("Web socket is not authenticated. Please log in again"))}}})}async parseResponse(e,s){let t=await s.text(),r;try{r=JSON.parse(t)}catch{if(s.status===404)return a.Failed("page not found","NotFound",O);if(s.status===503){if(e.includes("kiosk.sh")||e.includes("cluster.loft.sh")){let u=e.split("/");return u.length>=4&&u[0]===""&&u[1]==="kubernetes"&&u[2]==="cluster"?a.Failed(`Agent seems to be currently unavailable, it is maybe just starting up. Click <a href="/spaces/${u[3]}/loft">here</a> for more information</span>`,"LoftAgentUnavailable",w):a.Failed("Agent seems to be currently unavailable, it is maybe just starting up","LoftAgentUnavailable",w)}}else if(s.status===200)return a.Value(t);return console.info("Unexpected Server Response",t),a.Failed("Unexpected server response",v(s.status),v(s.status))}let n=k.tryCastToStatus(r);return n.err?n:n.val!==null&&n.val.status==="Failure"?n.val.code===500&&(n.val.message?.indexOf("vcluster secret not found")!==-1||n.val.message.indexOf("no ready pod for virtual cluster")!==-1)?a.Failed("vcluster seems to be not ready. Please refresh in a second",n.val.reason,v(n.val.code)):a.Failed(n.val.message,n.val.reason,v(n.val.code)):s.status>=400?a.Failed("unknown error","Unknown",v(s.status)):a.Value(r)}management(e){return new l(this,{basePath:H,groupVersionResource:e,headers:this.impersonationHeaders()})}vCluster(e,s){return new l(this,{basePath:$+e.cluster+"/"+e.namespace+"/"+e.name,groupVersionResource:s,vCluster:e,headers:this.impersonationHeaders()})}vClusterNonResource(e){return new l(this,{basePath:$+e.cluster+"/"+e.namespace+"/"+e.name,vCluster:e,headers:this.impersonationHeaders()})}auto(e,s,t,r){return t?this.project(t,r):s?this.vCluster(s,r):e?this.cluster(e,r):this.management(r)}autoNonResource(e,s,t){return t?this.projectNonResource(t):s?this.vClusterNonResource(s):e?this.clusterNonResource(e):this.managementNonResource()}async doRawSocket(e,s){try{return a.Value(await this.socket(e,s))}catch(t){return console.error(t),a.Failed(t.message||JSON.stringify(t))}}async doRawStream(e,s,t){return this.doRawInternal(e,s,t,!0)}async doRaw(e,s,t){return this.doRawInternal(e,s,t)}async doRawInternal(e,s,t,r){let n=this.accessKey,i=n?new Headers({...t,Authorization:"bearer "+n,"X-Sleep-Mode-Ignore":"true","X-Platform-Client":"true"}):new Headers({...t,"X-Sleep-Mode-Ignore":"true","X-Platform-Client":"true"}),u=r?await this.stream(e,{...s,headers:i}):await this.request(e,{...s,headers:i});return u.err&&u.val.type===T&&(u.val.message==="Access key not found. Please login again"||u.val.message==="invalid bearer token")&&(this.clearStorage(),typeof window<"u"&&(window.location.href="/"),await new Promise(()=>{})),u}impersonationHeaders(e){let s=this.impersonatedUser(),t={};return s&&(s.subject&&(t["Impersonate-User"]=s.subject),[...h(s.groups),...h(e)].forEach(r=>{t["Impersonate-Joined-Group"]?t["Impersonate-Joined-Group"]+=", "+r:t["Impersonate-Joined-Group"]=r})),t}clearStorage(){this.accessKey=null,localStorage.removeItem(V),localStorage.removeItem(R),p.default.remove(V,{secure:!0}),p.default.remove(R,{secure:!0}),p.default.remove(A,{secure:!0})}refreshCookie(){let e=this.accessKey||localStorage.getItem(V),s=p.default.get(V);e&&e!=s&&p.default.set(V,e,I)}async logout(){let e=await this.management(c.ManagementV1Self).Create(d(c.ManagementV1Self));if(e.err)return this.clearStorage(),e;if(!e.val.status?.accessKey)return this.clearStorage(),a.Ok();let s=await this.management(c.ManagementV1OwnedAccessKey).Delete(e.val.status.accessKey);return s.err?(this.clearStorage(),s):(this.clearStorage(),a.Ok())}},l=class{constructor(e,s){this.client=e,this.options=s}Name(e){return new l(this.client,{...this.options,name:e})}Namespace(e){return e?new l(this.client,{...this.options,namespace:e}):new l(this.client,{...this.options})}Resource(e){return new l(this.client,{...this.options,groupVersionResource:e})}buildPath(e){if(this.options.groupVersionResource)if(this.options.basePath){if(!this.options.name&&this.options.groupVersionResource.subResource)return a.Failed("resource name required when subresource is used")}else return a.Failed("basePath is missing");else return a.Failed("groupVersionResource is missing");let s=[this.options.basePath];this.options.groupVersionResource.group?s.push("apis",this.options.groupVersionResource.group):s.push("api"),s.push(this.options.groupVersionResource.version),this.options.namespace&&s.push("namespaces",this.options.namespace),s.push(this.options.groupVersionResource.resource),this.options.name&&s.push(this.options.name),this.options.groupVersionResource.subResource&&s.push(this.options.groupVersionResource.subResource);let t="";if(e){let r=[];for(let n of Object.keys(e))e[n]&&(Array.isArray(e[n])?e[n].forEach(i=>{r.push(n+"="+encodeURIComponent(i))}):r.push(n+"="+encodeURIComponent(e[n])));r.length>0&&(t="?"+r.join("&"))}else t="?timeout=180s";return a.Value(s.join("/")+t)}parseResourceList(e,s,t,r,n,i){for(let u=0;u<h(t.resources).length;u++){let m=t.resources[u];if(m===void 0)continue;let g=m.name.split("/"),f=g[0]??"";!i&&g.length>1||n&&r.find(M=>M.group===e&&M.resource===f)||r.push({resource:f,subResource:g.length>1?g[1]:void 0,group:e,version:s,kind:m.kind,namespaced:m.namespaced,verbs:m.verbs})}}async ApiResources(e,s){let t=[],r=await this.client.doRaw([this.options.basePath,"api"].join("/"));if(r.err)return r;let n=[];for(let u=0;u<h(r.val.versions).length;u++)n.push((async m=>{let g=r.val.versions[m];if(g===void 0)return;let f=await this.client.doRaw([this.options.basePath,"api",g].join("/"));if(f.err){console.error(f.val.message);return}this.parseResourceList("",g,f.val,t,e,s)})(u)),n.length>20&&(await Promise.all(n),n=[]);n.length>0&&(await Promise.all(n),n=[]);let i=await this.client.doRaw([this.options.basePath,"apis"].join("/"));if(i.err)return i;for(let u=0;u<h(i.val.groups).length;u++){let m=i.val.groups[u];if(m!==void 0)for(let g=0;g<h(m.versions).length;g++)n.push((async(f,M)=>{let L=M.versions[f];if(L===void 0)return;let U=await this.client.doRaw([this.options.basePath,"apis",M.name,L.version].join("/"));if(U.err){console.error(U.val.message);return}this.parseResourceList(M.name,L.version,U.val,t,e,s)})(g,m)),n.length>20&&(await Promise.all(n),n=[])}return n.length>0&&await Promise.all(n),a.Value(t)}async Version(){let e=[this.options.basePath,"version"];return await this.client.doRaw(e.join("/"))}async VirtualClusterInstanceLogs(e,s,t){let r=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/virtualclusterinstances/${s}/log`].join("/"),n=[];if(t)for(let i of Object.keys(t))n.push(`${i}=${encodeURIComponent(t[i])}`);return n.length>0&&(r+="?"+n.join("&")),await this.client.doRawStream(r,void 0,this.options.headers)}async TaskLogs(e,s){let t=[this.options.basePath,`apis/management.loft.sh/v1/tasks/${e}/log`].join("/"),r=[];if(s)for(let n of Object.keys(s))r.push(`${n}=${encodeURIComponent(s[n])}`);return r.length>0&&(t+="?"+r.join("&")),await this.client.doRawStream(t,void 0,this.options.headers)}async DevPodWorkspaceInstanceLogs(e,s,t,r){let n=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/devpodworkspaceinstances/${s}/log`].join("/"),i=["taskID="+t];if(r)for(let u of Object.keys(r))i.push(`${u}=${encodeURIComponent(r[u])}`);return i.length>0&&(n+="?"+i.join("&")),await this.client.doRawStream(n,void 0,this.options.headers)}async DevPodWorkspaceInstanceTasks(e,s){let t=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/devpodworkspaceinstances/${s}/tasks`].join("/");return this.client.doRaw(t,void 0,this.options.headers)}async Logs(e,s,t){let r=[this.options.basePath,`api/v1/namespaces/${e}/pods/${s}/log`].join("/"),n=oe(t);return n.length>0&&(r+="?"+n),await this.client.doRawStream(r,void 0,this.options.headers)}async Exec(e,s,t){let r=[this.options.basePath,`api/v1/namespaces/${e}/pods/${s}/exec`].join("/"),n=oe(t);return n.length>0&&(r+="?"+n),await this.client.doRawSocket(r,Pe)}async Path(e,s,t){let r=[this.options.basePath,e];return await this.client.doRaw(r.join("/"),s,{...t,...this.options.headers})}ResolvePath(e){return e&&(this.options.name=e),this.buildPath()}async Get(e,s){this.options.name=e;let t=this.buildPath(s);return t.err?t:a.WithExtra(await this.client.doRaw(t.val,void 0,this.options.headers),this.options)}async List(e){if(this.options.name)return a.Failed("name is set on a list request");let s=this.buildPath(e);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,void 0,this.options.headers),this.options)}async ListTable(e){if(this.options.name)return a.Failed("name is set on a list request");let s=this.buildPath(e);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,void 0,{...this.options.headers,Accept:"application/json;as=Table;v=v1;g=meta.k8s.io,application/json;as=Table;v=v1beta1;g=meta.k8s.io,application/json"}),this.options)}async Create(e,s){let t=this.buildPath(s);return t.err?t:a.WithExtra(await this.client.doRaw(t.val,{method:"POST",body:JSON.stringify(e)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async PatchObject(e,s,t,r){let n=ae.default.generate(e,s);return this.Patch(s.metadata?.name,n,t,r)}async Patch(e,s,t,r){this.options.name=e;let n=this.buildPath(r);return n.err?n:a.WithExtra(await this.client.doRaw(n.val,{method:"PATCH",body:JSON.stringify(s,function(i,u){return u===void 0?null:u})},{...this.options.headers,"Content-Type":t||"application/merge-patch+json"}),this.options)}async Update(e,s,t){this.options.name=e;let r=this.buildPath(t);return r.err?r:a.WithExtra(await this.client.doRaw(r.val,{method:"PUT",body:JSON.stringify(s)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async Delete(e,s){this.options.name=e;let t=this.buildPath(s);return t.err?t:a.WithExtra(await this.client.doRaw(t.val,{method:"DELETE"},this.options.headers),this.options)}async CanI(e){let s=this.options.groupVersionResource,t=this.options.basePath?.indexOf(j)===0?this.options.basePath.substring(j.length):void 0,r,n;this.options.project?(r=this.client.project(this.options.project,c.V1SelfSubjectAccessReview),n=d(c.V1SelfSubjectAccessReview)):this.options.vCluster?(r=this.client.vCluster(this.options.vCluster,c.V1SelfSubjectAccessReview),n=d(c.V1SelfSubjectAccessReview)):t?(r=this.client.cluster(t,c.V1SelfSubjectAccessReview),n=d(c.V1SelfSubjectAccessReview)):(r=this.client.management(c.ManagementV1SelfSubjectAccessReview),n=d(c.ManagementV1SelfSubjectAccessReview)),n.spec={resourceAttributes:{verb:e,name:this.options.name,namespace:this.options.namespace,group:s.group,version:s.version,resource:s.resource,subresource:s.subResource}};let i=await r.Create(n);return i.err?i:a.Value(!!(i.val.status?.allowed&&!i.val.status.denied))}};function oe(o){let e=new URLSearchParams;for(let[s,t]of Object.entries(o))Array.isArray(t)?t.forEach(r=>{e.append(s,r)}):e.append(s,t);return e.toString()}var ue=k;0&&(module.exports={APIExtensionsGroup,APIExtensionsGroupVersion,APIExtensionsVersion,Client,ClusterBasePath,Err,ErrorTypeAlreadyExists,ErrorTypeBadGateway,ErrorTypeBadRequest,ErrorTypeForbidden,ErrorTypeGatewayTimeout,ErrorTypeInternalError,ErrorTypeNetwork,ErrorTypeNotFound,ErrorTypeNotImplemented,ErrorTypeServiceUnavailable,ErrorTypeUnauthorized,ErrorTypeUnknown,Failed,List,LoftSchemeGroup,LoftSchemeGroupCluster,LoftSchemeGroupStorage,LoftSchemeGroupVersion,LoftSchemeGroupVersionCluster,LoftSchemeGroupVersionStorage,LoftSchemeGroupVersionVirtualCluster,LoftSchemeGroupVirtualCluster,LoftSchemeVersion,LoftSchemeVersionCluster,LoftSchemeVersionStorage,LoftSchemeVersionVirtualCluster,ManagementBasePath,MapErrorCode,NewResource,Ok,ProjectBasePath,Resources,Return,VClusterBasePath,getApiHost,getProjectFromNamespace,getProjectNamespace,isResult});
