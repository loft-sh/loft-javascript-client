import m from"js-cookie";import ne from"json-merge-patch";var v={loftAccessKeyIdentifier:"loft_access_key",loftImpersonateSubjectIdentifier:"loft_impersonate_subject",loftImpersonateJoinedGroupIdentifier:"loft_impersonate_joined_group",platformAccessKeyNotFound:"platform access key not found. Please login again"};function h(o){return o||[]}function x(o,e,s,r,n,t){for(let i=0;i<h(s.resources).length;i++){let u=s.resources[i];if(u===void 0)continue;let l=u.name.split("/"),p=l[0]??"";!t&&l.length>1||n&&r.find(V=>V.group===o&&V.resource===p)||r.push({resource:p,subResource:l.length>1?l[1]:void 0,group:o,version:e,kind:u.kind,namespaced:u.namespaced,verbs:u.verbs})}}var U={ManagementV1AgentAuditEvent:{group:"management.loft.sh",version:"v1",resource:"agentauditevents",subResource:"",namespaced:!1,kind:"AgentAuditEvent"},ManagementV1Announcement:{group:"management.loft.sh",version:"v1",resource:"announcements",subResource:"",namespaced:!1,kind:"Announcement"},ManagementV1App:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"",namespaced:!1,kind:"App"},ManagementV1AppCredentials:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"credentials",namespaced:!1,kind:"AppCredentials"},ManagementV1Backup:{group:"management.loft.sh",version:"v1",resource:"backups",subResource:"",namespaced:!1,kind:"Backup"},ManagementV1BackupApply:{group:"management.loft.sh",version:"v1",resource:"backups",subResource:"apply",namespaced:!1,kind:"BackupApply"},ManagementV1Cluster:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"",namespaced:!1,kind:"Cluster"},ManagementV1ClusterAccess:{group:"management.loft.sh",version:"v1",resource:"clusteraccesses",subResource:"",namespaced:!1,kind:"ClusterAccess"},ManagementV1ClusterAccessKey:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"accesskey",namespaced:!1,kind:"ClusterAccessKey"},ManagementV1ClusterAgentConfig:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"agentconfig",namespaced:!1,kind:"ClusterAgentConfig"},ManagementV1ClusterCharts:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"charts",namespaced:!1,kind:"ClusterCharts"},ManagementV1ClusterDomain:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"domain",namespaced:!1,kind:"ClusterDomain"},ManagementV1ClusterMemberAccess:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"memberaccess",namespaced:!1,kind:"ClusterMemberAccess"},ManagementV1ClusterMembers:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"members",namespaced:!1,kind:"ClusterMembers"},ManagementV1ClusterReset:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"reset",namespaced:!1,kind:"ClusterReset"},ManagementV1ClusterRoleTemplate:{group:"management.loft.sh",version:"v1",resource:"clusterroletemplates",subResource:"",namespaced:!1,kind:"ClusterRoleTemplate"},ManagementV1ClusterVirtualClusterDefaults:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"virtualclusterdefaults",namespaced:!1,kind:"ClusterVirtualClusterDefaults"},ManagementV1Config:{group:"management.loft.sh",version:"v1",resource:"configs",subResource:"",namespaced:!1,kind:"Config"},ManagementV1ConvertVirtualClusterConfig:{group:"management.loft.sh",version:"v1",resource:"convertvirtualclusterconfig",subResource:"",namespaced:!1,kind:"ConvertVirtualClusterConfig"},ManagementV1DatabaseConnector:{group:"management.loft.sh",version:"v1",resource:"databaseconnectors",subResource:"",namespaced:!1,kind:"DatabaseConnector"},ManagementV1DevPodEnvironmentTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodenvironmenttemplates",subResource:"",namespaced:!1,kind:"DevPodEnvironmentTemplate"},ManagementV1DevPodWorkspaceInstance:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"",namespaced:!0,kind:"DevPodWorkspaceInstance"},ManagementV1DevPodWorkspaceInstanceState:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"state",namespaced:!0,kind:"DevPodWorkspaceInstanceState"},ManagementV1DevPodWorkspaceInstanceTroubleshoot:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"troubleshoot",namespaced:!0,kind:"DevPodWorkspaceInstanceTroubleshoot"},ManagementV1DevPodWorkspacePreset:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacepresets",subResource:"",namespaced:!1,kind:"DevPodWorkspacePreset"},ManagementV1DevPodWorkspaceTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacetemplates",subResource:"",namespaced:!1,kind:"DevPodWorkspaceTemplate"},ManagementV1DirectClusterEndpointToken:{group:"management.loft.sh",version:"v1",resource:"directclusterendpointtokens",subResource:"",namespaced:!1,kind:"DirectClusterEndpointToken"},ManagementV1Event:{group:"management.loft.sh",version:"v1",resource:"events",subResource:"",namespaced:!1,kind:"Event"},ManagementV1Feature:{group:"management.loft.sh",version:"v1",resource:"features",subResource:"",namespaced:!1,kind:"Feature"},ManagementV1IngressAuthToken:{group:"management.loft.sh",version:"v1",resource:"ingressauthtokens",subResource:"",namespaced:!1,kind:"IngressAuthToken"},ManagementV1Kiosk:{group:"management.loft.sh",version:"v1",resource:"kiosk",subResource:"",namespaced:!1,kind:"Kiosk"},ManagementV1License:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"",namespaced:!1,kind:"License"},ManagementV1LicenseRequest:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"request",namespaced:!1,kind:"LicenseRequest"},ManagementV1LicenseToken:{group:"management.loft.sh",version:"v1",resource:"licensetokens",subResource:"",namespaced:!1,kind:"LicenseToken"},ManagementV1LoftUpgrade:{group:"management.loft.sh",version:"v1",resource:"loftupgrades",subResource:"",namespaced:!1,kind:"LoftUpgrade"},ManagementV1OIDCClient:{group:"management.loft.sh",version:"v1",resource:"oidcclients",subResource:"",namespaced:!1,kind:"OIDCClient"},ManagementV1OwnedAccessKey:{group:"management.loft.sh",version:"v1",resource:"ownedaccesskeys",subResource:"",namespaced:!1,kind:"OwnedAccessKey"},ManagementV1Project:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"",namespaced:!1,kind:"Project"},ManagementV1ProjectChartInfo:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"chartinfo",namespaced:!1,kind:"ProjectChartInfo"},ManagementV1ProjectCharts:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"charts",namespaced:!1,kind:"ProjectCharts"},ManagementV1ProjectClusters:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"clusters",namespaced:!1,kind:"ProjectClusters"},ManagementV1ProjectImportSpace:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"importspace",namespaced:!1,kind:"ProjectImportSpace"},ManagementV1ProjectMembers:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"members",namespaced:!1,kind:"ProjectMembers"},ManagementV1ProjectMigrateSpaceInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratespaceinstance",namespaced:!1,kind:"ProjectMigrateSpaceInstance"},ManagementV1ProjectMigrateVirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratevirtualclusterinstance",namespaced:!1,kind:"ProjectMigrateVirtualClusterInstance"},ManagementV1ProjectRunners:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"runners",namespaced:!1,kind:"ProjectRunners"},ManagementV1ProjectSecret:{group:"management.loft.sh",version:"v1",resource:"projectsecrets",subResource:"",namespaced:!0,kind:"ProjectSecret"},ManagementV1ProjectTemplates:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"templates",namespaced:!1,kind:"ProjectTemplates"},ManagementV1RedirectToken:{group:"management.loft.sh",version:"v1",resource:"redirecttokens",subResource:"",namespaced:!1,kind:"RedirectToken"},ManagementV1RegisterVirtualCluster:{group:"management.loft.sh",version:"v1",resource:"registervirtualclusters",subResource:"",namespaced:!1,kind:"RegisterVirtualCluster"},ManagementV1ResetAccessKey:{group:"management.loft.sh",version:"v1",resource:"resetaccesskeys",subResource:"",namespaced:!1,kind:"ResetAccessKey"},ManagementV1Runner:{group:"management.loft.sh",version:"v1",resource:"runners",subResource:"",namespaced:!1,kind:"Runner"},ManagementV1RunnerAccessKey:{group:"management.loft.sh",version:"v1",resource:"runners",subResource:"accesskey",namespaced:!1,kind:"RunnerAccessKey"},ManagementV1RunnerConfig:{group:"management.loft.sh",version:"v1",resource:"runners",subResource:"config",namespaced:!1,kind:"RunnerConfig"},ManagementV1Self:{group:"management.loft.sh",version:"v1",resource:"selves",subResource:"",namespaced:!1,kind:"Self"},ManagementV1SelfSubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"selfsubjectaccessreviews",subResource:"",namespaced:!1,kind:"SelfSubjectAccessReview"},ManagementV1SharedSecret:{group:"management.loft.sh",version:"v1",resource:"sharedsecrets",subResource:"",namespaced:!0,kind:"SharedSecret"},ManagementV1SpaceInstance:{group:"management.loft.sh",version:"v1",resource:"spaceinstances",subResource:"",namespaced:!0,kind:"SpaceInstance"},ManagementV1SpaceTemplate:{group:"management.loft.sh",version:"v1",resource:"spacetemplates",subResource:"",namespaced:!1,kind:"SpaceTemplate"},ManagementV1SubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"subjectaccessreviews",subResource:"",namespaced:!1,kind:"SubjectAccessReview"},ManagementV1Task:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"",namespaced:!1,kind:"Task"},ManagementV1TaskLog:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"log",namespaced:!1,kind:"TaskLog"},ManagementV1Team:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"",namespaced:!1,kind:"Team"},ManagementV1TeamAccessKeys:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"accesskeys",namespaced:!1,kind:"TeamAccessKeys"},ManagementV1TeamClusters:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"clusters",namespaced:!1,kind:"TeamClusters"},ManagementV1TeamObjectPermissions:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"object-permissions",namespaced:!1,kind:"TeamObjectPermissions"},ManagementV1TeamPermissions:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"permissions",namespaced:!1,kind:"TeamPermissions"},ManagementV1TranslateVClusterResourceName:{group:"management.loft.sh",version:"v1",resource:"translatevclusterresourcenames",subResource:"",namespaced:!1,kind:"TranslateVClusterResourceName"},ManagementV1User:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"",namespaced:!1,kind:"User"},ManagementV1UserAccessKeys:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"accesskeys",namespaced:!1,kind:"UserAccessKeys"},ManagementV1UserClusters:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"clusters",namespaced:!1,kind:"UserClusters"},ManagementV1UserObjectPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"object-permissions",namespaced:!1,kind:"UserObjectPermissions"},ManagementV1UserPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"permissions",namespaced:!1,kind:"UserPermissions"},ManagementV1UserProfile:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"profile",namespaced:!1,kind:"UserProfile"},ManagementV1VirtualClusterAccessKey:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"accesskey",namespaced:!0,kind:"VirtualClusterAccessKey"},ManagementV1VirtualClusterExternalDatabase:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"externaldatabase",namespaced:!0,kind:"VirtualClusterExternalDatabase"},ManagementV1VirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"",namespaced:!0,kind:"VirtualClusterInstance"},ManagementV1VirtualClusterInstanceKubeConfig:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"kubeconfig",namespaced:!0,kind:"VirtualClusterInstanceKubeConfig"},ManagementV1VirtualClusterInstanceLog:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"log",namespaced:!0,kind:"VirtualClusterInstanceLog"},ManagementV1VirtualClusterSchema:{group:"management.loft.sh",version:"v1",resource:"virtualclusterschemas",subResource:"",namespaced:!1,kind:"VirtualClusterSchema"},ManagementV1VirtualClusterTemplate:{group:"management.loft.sh",version:"v1",resource:"virtualclustertemplates",subResource:"",namespaced:!1,kind:"VirtualClusterTemplate"}};var q="virtualcluster.loft.sh",F="v1",pe="virtualcluster.loft.sh/v1",k="cluster.loft.sh",y="v1",ge="cluster.loft.sh/v1",de="management.loft.sh",W="v1",Ve="management.loft.sh/v1",fe="storage.loft.sh",he="v1",Re="storage.loft.sh/v1",B="apiextensions.k8s.io",H="v1",ve="apiextensions.k8s.io/v1",N=class{};var c={...U,ClusterV1SleepModeConfig:{group:k,version:y,resource:"sleepmodeconfigs",kind:"SleepModeConfig",namespaced:!0},ClusterV1HelmRelease:{group:k,version:y,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},ClusterV1ChartInfo:{group:k,version:y,resource:"chartinfos",kind:"ChartInfo"},VirtualclusterV1HelmRelease:{group:q,version:F,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},CustomResourceDefinition:{group:B,version:H,resource:"customresourcedefinitions",kind:"CustomResourceDefinition"},StorageV1ClusterQuota:{group:"storage.loft.sh",version:W,resource:"clusterquotas",kind:"ClusterQuota"},NetworkingV1Ingress:{group:"networking.k8s.io",version:"v1",resource:"ingresses",kind:"Ingress",namespaced:!0},V1StatefulSet:{group:"apps",version:"v1",resource:"statefulsets",kind:"StatefulSet",namespaced:!0},V1Deployment:{group:"apps",version:"v1",resource:"deployments",kind:"Deployment",namespaced:!0},V1Event:{group:"",version:"v1",resource:"events",kind:"Event",namespaced:!0},V1Pod:{group:"",version:"v1",resource:"pods",kind:"Pod",namespaced:!0},V1Node:{group:"",version:"v1",resource:"nodes",kind:"Node"},V1Namespace:{group:"",version:"v1",resource:"namespaces",kind:"Namespace"},V1SelfSubjectAccessReview:{group:"authorization.k8s.io",version:"v1",resource:"selfsubjectaccessreviews",kind:"SelfSubjectAccessReview"},V1ClusterRole:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterroles",kind:"ClusterRole"},V1ClusterRoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterrolebindings",kind:"ClusterRoleBinding"},V1Role:{group:"rbac.authorization.k8s.io",version:"v1",resource:"roles",kind:"Role",namespaced:!0},V1RoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"rolebindings",kind:"RoleBinding",namespaced:!0},V1Secret:{group:"",version:"v1",resource:"secrets",kind:"Secret",namespaced:!0},V1ConfigMap:{group:"",version:"v1",resource:"configmaps",kind:"ConfigMap",namespaced:!0},V1Service:{group:"",version:"v1",resource:"services",kind:"Service",namespaced:!0},V1User:{group:"",version:"v1",resource:"users",kind:"User",namespaced:!1},V1StorageClassList:{group:"storage.k8s.io",version:"v1",resource:"storageclasses",kind:"StorageClass",namespaced:!1},V1Beta1PodMetrics:{group:"metrics.k8s.io",version:"v1beta1",resource:"pods",kind:"PodMetrics",namespaced:!0}};function f(o,e,s){return{apiVersion:o.group?o.group+"/"+o.version:o.version,kind:o.kind,metadata:{name:e},...s}}var P=class{constructor(e,s=void 0){this.val=e;this.extra=s;this.ok=!1;this.err=!0}},S=class{constructor(e,s=void 0){this.val=e;this.extra=s;this.ok=!0;this.err=!1}};function Te(o){return"ok"in o&&typeof o.ok=="boolean"&&"err"in o&&typeof o.err=="boolean"}var O="",D="Network",X="Forbidden",Y="BadRequest",L="NotFound",T="Unauthorized",Z="AlreadyExists",ee="InternalServerError",se="NotImplemented",re="BadGateway",w="ServiceUnavailable",te="GatewayTimeout",M=o=>{switch(o){case 400:return Y;case 401:return T;case 403:return X;case 404:return L;case 409:return Z;case 500:return ee;case 501:return se;case 502:return re;case 503:return w;case 504:return te}return O},a=class{static Ok(){return new S(void 0)}static Value(e){return new S(e)}static Failed(e,s="",r=O,n=void 0){return new P(new E(e,r,s),n)}static Error(e){return new P(e)}static WithExtra(e,s=void 0){return e.extra=s,e}},E=class{constructor(e,s=O,r=""){this.message=e;this.type=s;this.reason=r}};var b={secure:!0,expires:365*10,sameSite:"strict"},d=v.loftAccessKeyIdentifier,R=v.loftImpersonateSubjectIdentifier,C=v.loftImpersonateJoinedGroupIdentifier,oe=["v4.channel.k8s.io","v3.channel.k8s.io","v2.channel.k8s.io","channel.k8s.io"];function ae(){return typeof window<"u"&&window.location.href.startsWith("http://localhost:3000")?"https://localhost:9898":""}function ie(){return typeof window>"u"||window.location.host==="localhost:3000"?"wss://localhost:8080":`${window.location.protocol==="https:"?"wss":"ws"}://${window.location.host}`}function $(o){return[o.virtualCluster?"loft:vcluster:main":`loft:space:${o.project}:${o.space}`]}var J="/kubernetes/management",A="/kubernetes/cluster/",_="/kubernetes/virtualcluster/",z="/kubernetes/project/",Le=(o,e)=>o?e?`${e}${o}`:`p-${o}`:"p-";function Ke(o,e){if(o)return e?e.endsWith("-")?o.replace(new RegExp(`^${e}`),""):o.replace(new RegExp(`^${e}-`),""):o.replace(/^p-/,"")}var K=class o{constructor(e,s,r){this.apiHost="";this.wsHost="";this.accessKey="";this.managementNonResource=()=>new g(this,{basePath:J,headers:this.impersonationHeaders()});this.cluster=(e,s)=>new g(this,{basePath:A+e,groupVersionResource:s,headers:this.impersonationHeaders()});this.clusterNonResource=e=>new g(this,{basePath:A+e,headers:this.impersonationHeaders()});this.project=(e,s)=>new g(this,{basePath:z+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),groupVersionResource:s,project:e,headers:this.impersonationHeaders($(e))});this.projectNonResource=e=>new g(this,{basePath:z+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),project:e,headers:this.impersonationHeaders($(e))});this.apiHost=s||ae(),this.wsHost=r||ie(),this.accessKey=e||o.getAccessKey()}static getAccessKey(){return localStorage.getItem(d)}static tryCastToStatus(e){if(e.kind){if(e.kind!=="Status"||e.apiVersion!=="v1")return a.Value(null)}else return a.Value(null);return a.Value(e)}async getUser(){let e=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));return e.err?e:e.val.status?.user?(typeof window<"u"&&(window.loft||(window.loft={}),window.loft.instanceID=e.val.status.instanceID,window.loft.chatAuthToken=e.val.status.chatAuthToken,window.loft.user=e.val.status.user),a.Value(e.val.status.user.name)):a.Failed("no user found")}getAccessKey(){return this.accessKey}async loftVersion(e){try{let s=this.apiHost+"/version";e&&(s+="?refresh=true");let n=await(await fetch(s)).json();return a.Value(n)}catch(s){return console.error(s),a.Failed("error during version retrieval")}}impersonatedUser(){try{let e=localStorage.getItem(R);if(e)return JSON.parse(e)}catch(e){console.error(e)}}impersonate(e,s,r){s?(localStorage.setItem(R,JSON.stringify({name:e,subject:s,groups:r})),s&&m.set(R,s,b),r?.forEach(n=>{let t=m.get(C);t?(t+=", "+n,m.set(C,t,b)):m.set(C,n,b)})):(localStorage.removeItem(R),m.remove(R),m.remove(C))}async login(e,s){let r=await this.request("/auth/password/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:s})});if(r.err)return r;let n=r.val;return this.setAccessKey(n.accessKey),a.Ok()}async loginWithAccessKey(e){this.isLoggedIn()&&await this.logout(),this.accessKey=e;let s=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));return s.err?(this.clearStorage(),s):(this.setAccessKey(e),a.Ok())}isLoggedIn(){return!!this.accessKey}setAccessKey(e){this.accessKey=e,localStorage.setItem(d,e),m.set(d,e,b)}async stream(e,s){try{let r=await fetch(this.apiHost+e,s);return r.status>=400||!r.body?await this.parseResponse(e,r):a.Value(r.body.getReader())}catch(r){return a.Failed(r+"","NetworkError",D)}}async request(e,s){try{let r=await fetch(this.apiHost+e,{...s,credentials:"same-origin"});if(!r.ok){let t=await r.clone().text();if(r.status===401)try{let i=JSON.parse(t);if(i?.message===v.platformAccessKeyNotFound)return a.Failed(i.message||"Unauthorized",i.reason,T)}catch{}}return await this.parseResponse(e,r)}catch(r){let n=r;return n.message===v.platformAccessKeyNotFound&&(window.location.href=`/login?error=${n.message}&errorType=${n.reason}`),a.Failed(r+"","NetworkError",D)}}async socket(e,s){return this.refreshCookie(),new Promise((r,n)=>{let t=new WebSocket(`${this.wsHost}${e}`,s),i=!1;t.onopen=()=>{i=!0,r(t)},t.onerror=u=>{if(!i){let l=m.get(d)!="";n(l?u:new Error("Web socket is not authenticated. Please log in again"))}}})}async parseResponse(e,s){let r=await s.text(),n;try{n=JSON.parse(r)}catch{if(s.status===404)return a.Failed("page not found","NotFound",L);if(s.status===503){if(e.includes("kiosk.sh")||e.includes("cluster.loft.sh")){let u=e.split("/");return u.length>=4&&u[0]===""&&u[1]==="kubernetes"&&u[2]==="cluster"?a.Failed(`Agent seems to be currently unavailable, it is maybe just starting up. Click <a href="/spaces/${u[3]}/loft">here</a> for more information</span>`,"LoftAgentUnavailable",w):a.Failed("Agent seems to be currently unavailable, it is maybe just starting up","LoftAgentUnavailable",w)}}else if(s.status===200)return a.Value(r);return console.info("Unexpected Server Response",r),a.Failed("Unexpected server response",M(s.status),M(s.status))}let t=o.tryCastToStatus(n);return t.err?t:t.val!==null&&t.val.status==="Failure"?t.val.code===500&&(t.val.message?.indexOf("vcluster secret not found")!==-1||t.val.message.indexOf("no ready pod for virtual cluster")!==-1)?a.Failed("vcluster seems to be not ready. Please refresh in a second",t.val.reason,M(t.val.code)):a.Failed(t.val.message,t.val.reason,M(t.val.code)):s.status>=400?a.Failed("unknown error","Unknown",M(s.status)):a.Value(n)}management(e){return new g(this,{basePath:J,groupVersionResource:e,headers:this.impersonationHeaders()})}vCluster(e,s){return new g(this,{basePath:_+e.cluster+"/"+e.namespace+"/"+e.name,groupVersionResource:s,vCluster:e,headers:this.impersonationHeaders()})}vClusterNonResource(e){return new g(this,{basePath:_+e.cluster+"/"+e.namespace+"/"+e.name,vCluster:e,headers:this.impersonationHeaders()})}auto(e,s,r,n){return r?this.project(r,n):s?this.vCluster(s,n):e?this.cluster(e,n):this.management(n)}autoNonResource(e,s,r){return r?this.projectNonResource(r):s?this.vClusterNonResource(s):e?this.clusterNonResource(e):this.managementNonResource()}async doRawSocket(e,s){try{return a.Value(await this.socket(e,s))}catch(r){return console.error(r),a.Failed(r.message||JSON.stringify(r))}}async doRawStream(e,s,r){return this.doRawInternal(e,s,r,!0)}async doRaw(e,s,r){return this.doRawInternal(e,s,r)}async doRawInternal(e,s,r,n){let t=this.accessKey,i=t?new Headers({...r,Authorization:"bearer "+t,"X-Sleep-Mode-Ignore":"true","X-Platform-Client":"true"}):new Headers({...r,"X-Sleep-Mode-Ignore":"true","X-Platform-Client":"true"}),u=n?await this.stream(e,{...s,headers:i}):await this.request(e,{...s,headers:i});return u.err&&u.val.type===T&&(u.val.message==="Access key not found. Please login again"||u.val.message==="invalid bearer token")&&(this.clearStorage(),typeof window<"u"&&(window.location.href="/"),await new Promise(()=>{})),u}impersonationHeaders(e){let s=this.impersonatedUser(),r={};return s&&(s.subject&&(r["Impersonate-User"]=s.subject),[...h(s.groups),...h(e)].forEach(n=>{r["Impersonate-Joined-Group"]?r["Impersonate-Joined-Group"]+=", "+n:r["Impersonate-Joined-Group"]=n})),r}clearStorage(){this.accessKey=null,localStorage.removeItem(d),localStorage.removeItem(R),m.remove(d,{secure:!0}),m.remove(R,{secure:!0}),m.remove(C,{secure:!0})}refreshCookie(){let e=this.accessKey||localStorage.getItem(d),s=m.get(d);e&&e!=s&&m.set(d,e,b)}async logout(){let e=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));if(e.err)return this.clearStorage(),e;if(!e.val.status?.accessKey)return this.clearStorage(),a.Ok();let s=await this.management(c.ManagementV1OwnedAccessKey).Delete(e.val.status.accessKey);return s.err?(this.clearStorage(),s):(this.clearStorage(),a.Ok())}},g=class o{constructor(e,s){this.client=e,this.options=s}Name(e){return new o(this.client,{...this.options,name:e})}Namespace(e){return e?new o(this.client,{...this.options,namespace:e}):new o(this.client,{...this.options})}Resource(e){return new o(this.client,{...this.options,groupVersionResource:e})}buildPath(e){if(this.options.groupVersionResource)if(this.options.basePath){if(!this.options.name&&this.options.groupVersionResource.subResource)return a.Failed("resource name required when subresource is used")}else return a.Failed("basePath is missing");else return a.Failed("groupVersionResource is missing");let s=[this.options.basePath];this.options.groupVersionResource.group?s.push("apis",this.options.groupVersionResource.group):s.push("api"),s.push(this.options.groupVersionResource.version),this.options.namespace&&s.push("namespaces",this.options.namespace),s.push(this.options.groupVersionResource.resource),this.options.name&&s.push(this.options.name),this.options.groupVersionResource.subResource&&s.push(this.options.groupVersionResource.subResource);let r="";if(e){let n=[];for(let t of Object.keys(e))e[t]&&(Array.isArray(e[t])?e[t].forEach(i=>{n.push(t+"="+encodeURIComponent(i))}):n.push(t+"="+encodeURIComponent(e[t])));n.length>0&&(r="?"+n.join("&"))}else r="?timeout=180s";return a.Value(s.join("/")+r)}async ApiResources(e,s){let r=[],n=await this.client.doRaw([this.options.basePath,"api"].join("/"));if(n.err)return n;let t=[];for(let u=0;u<h(n.val.versions).length;u++)t.push((async l=>{let p=n.val.versions[l];if(p===void 0)return;let V=await this.client.doRaw([this.options.basePath,"api",p].join("/"));if(V.err){console.error(V.val.message);return}x("",p,V.val,r,e,s)})(u)),t.length>20&&(await Promise.all(t),t=[]);t.length>0&&(await Promise.all(t),t=[]);let i=await this.client.doRaw([this.options.basePath,"apis"].join("/"));if(i.err)return i;for(let u=0;u<h(i.val.groups).length;u++){let l=i.val.groups[u];if(l!==void 0)for(let p=0;p<h(l.versions).length;p++)t.push((async(V,j)=>{let I=j.versions[V];if(I===void 0)return;let G=await this.client.doRaw([this.options.basePath,"apis",j.name,I.version].join("/"));if(G.err){console.error(G.val.message);return}x(j.name,I.version,G.val,r,e,s)})(p,l)),t.length>20&&(await Promise.all(t),t=[])}return t.length>0&&await Promise.all(t),a.Value(r)}async Version(){let e=[this.options.basePath,"version"];return await this.client.doRaw(e.join("/"))}async VirtualClusterInstanceLogs(e,s,r){let n=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/virtualclusterinstances/${s}/log`].join("/"),t=[];if(r)for(let i of Object.keys(r))t.push(`${i}=${encodeURIComponent(r[i])}`);return t.length>0&&(n+="?"+t.join("&")),await this.client.doRawStream(n,void 0,this.options.headers)}async TaskLogs(e,s){let r=[this.options.basePath,`apis/management.loft.sh/v1/tasks/${e}/log`].join("/"),n=[];if(s)for(let t of Object.keys(s))n.push(`${t}=${encodeURIComponent(s[t])}`);return n.length>0&&(r+="?"+n.join("&")),await this.client.doRawStream(r,void 0,this.options.headers)}async Logs(e,s,r){let n=[this.options.basePath,`api/v1/namespaces/${e}/pods/${s}/log`].join("/"),t=Q(r);return t.length>0&&(n+="?"+t),await this.client.doRawStream(n,void 0,this.options.headers)}async Exec(e,s,r){let n=[this.options.basePath,`api/v1/namespaces/${e}/pods/${s}/exec`].join("/"),t=Q(r);return t.length>0&&(n+="?"+t),await this.client.doRawSocket(n,oe)}async Path(e,s,r){let n=[this.options.basePath,e];return await this.client.doRaw(n.join("/"),s,{...r,...this.options.headers})}ResolvePath(e){return e&&(this.options.name=e),this.buildPath()}async Get(e,s){this.options.name=e;let r=this.buildPath(s);return r.err?r:a.WithExtra(await this.client.doRaw(r.val,void 0,this.options.headers),this.options)}async List(e){if(this.options.name)return a.Failed("name is set on a list request");let s=this.buildPath(e);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,void 0,this.options.headers),this.options)}async ListTable(e){if(this.options.name)return a.Failed("name is set on a list request");let s=this.buildPath(e);return s.err?s:a.WithExtra(await this.client.doRaw(s.val,void 0,{...this.options.headers,Accept:"application/json;as=Table;v=v1;g=meta.k8s.io,application/json;as=Table;v=v1beta1;g=meta.k8s.io,application/json"}),this.options)}async Create(e,s){let r=this.buildPath(s);return r.err?r:a.WithExtra(await this.client.doRaw(r.val,{method:"POST",body:JSON.stringify(e)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async PatchObject(e,s,r,n){let t=ne.generate(e,s);return this.Patch(s.metadata?.name,t,r,n)}async Patch(e,s,r,n){this.options.name=e;let t=this.buildPath(n);return t.err?t:a.WithExtra(await this.client.doRaw(t.val,{method:"PATCH",body:JSON.stringify(s,function(i,u){return u===void 0?null:u})},{...this.options.headers,"Content-Type":r||"application/merge-patch+json"}),this.options)}async Update(e,s,r){this.options.name=e;let n=this.buildPath(r);return n.err?n:a.WithExtra(await this.client.doRaw(n.val,{method:"PUT",body:JSON.stringify(s)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async Delete(e,s){this.options.name=e;let r=this.buildPath(s);return r.err?r:a.WithExtra(await this.client.doRaw(r.val,{method:"DELETE"},this.options.headers),this.options)}async CanI(e){let s=this.options.groupVersionResource,r=this.options.basePath?.indexOf(A)===0?this.options.basePath.substring(A.length):void 0,n,t;this.options.project?(n=this.client.project(this.options.project,c.V1SelfSubjectAccessReview),t=f(c.V1SelfSubjectAccessReview)):this.options.vCluster?(n=this.client.vCluster(this.options.vCluster,c.V1SelfSubjectAccessReview),t=f(c.V1SelfSubjectAccessReview)):r?(n=this.client.cluster(r,c.V1SelfSubjectAccessReview),t=f(c.V1SelfSubjectAccessReview)):(n=this.client.management(c.ManagementV1SelfSubjectAccessReview),t=f(c.ManagementV1SelfSubjectAccessReview)),t.spec={resourceAttributes:{verb:e,name:this.options.name,namespace:this.options.namespace,group:s.group,version:s.version,resource:s.resource,subresource:s.subResource}};let i=await n.Create(t);return i.err?i:a.Value(!!(i.val.status?.allowed&&!i.val.status.denied))}};function Q(o){let e=new URLSearchParams;for(let[s,r]of Object.entries(o))Array.isArray(r)?r.forEach(n=>{e.append(s,n)}):e.append(s,r);return e.toString()}var ue=K;export{B as APIExtensionsGroup,ve as APIExtensionsGroupVersion,H as APIExtensionsVersion,ue as Client,A as ClusterBasePath,P as Err,Z as ErrorTypeAlreadyExists,re as ErrorTypeBadGateway,Y as ErrorTypeBadRequest,X as ErrorTypeForbidden,te as ErrorTypeGatewayTimeout,ee as ErrorTypeInternalError,D as ErrorTypeNetwork,L as ErrorTypeNotFound,se as ErrorTypeNotImplemented,w as ErrorTypeServiceUnavailable,T as ErrorTypeUnauthorized,O as ErrorTypeUnknown,E as Failed,N as List,de as LoftSchemeGroup,k as LoftSchemeGroupCluster,fe as LoftSchemeGroupStorage,Ve as LoftSchemeGroupVersion,ge as LoftSchemeGroupVersionCluster,Re as LoftSchemeGroupVersionStorage,pe as LoftSchemeGroupVersionVirtualCluster,q as LoftSchemeGroupVirtualCluster,W as LoftSchemeVersion,y as LoftSchemeVersionCluster,he as LoftSchemeVersionStorage,F as LoftSchemeVersionVirtualCluster,J as ManagementBasePath,M as MapErrorCode,f as NewResource,S as Ok,z as ProjectBasePath,c as Resources,a as Return,_ as VClusterBasePath,ae as getApiHost,Ke as getProjectFromNamespace,Le as getProjectNamespace,Te as isResult};
