import m from"js-cookie";import ne from"json-merge-patch";var R={loftAccessKeyIdentifier:"loft_access_key",loftImpersonateSubjectIdentifier:"loft_impersonate_subject",loftImpersonateJoinedGroupIdentifier:"loft_impersonate_joined_group",platformAccessKeyNotFound:"platform access key not found. Please login again"};function h(a){return a||[]}function E(a,e,s,r,t,n){for(let i=0;i<h(s.resources).length;i++){let u=s.resources[i];if(u===void 0)continue;let p=u.name.split("/"),g=p[0]??"";!n&&p.length>1||t&&r.find(V=>V.group===a&&V.resource===g)||r.push({resource:g,subResource:p.length>1?p[1]:void 0,group:a,version:e,kind:u.kind,namespaced:u.namespaced,verbs:u.verbs})}}var K={ManagementV1AgentAuditEvent:{group:"management.loft.sh",version:"v1",resource:"agentauditevents",subResource:"",namespaced:!1,kind:"AgentAuditEvent"},ManagementV1Announcement:{group:"management.loft.sh",version:"v1",resource:"announcements",subResource:"",namespaced:!1,kind:"Announcement"},ManagementV1App:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"",namespaced:!1,kind:"App"},ManagementV1AppCredentials:{group:"management.loft.sh",version:"v1",resource:"apps",subResource:"credentials",namespaced:!1,kind:"AppCredentials"},ManagementV1Backup:{group:"management.loft.sh",version:"v1",resource:"backups",subResource:"",namespaced:!1,kind:"Backup"},ManagementV1BackupApply:{group:"management.loft.sh",version:"v1",resource:"backups",subResource:"apply",namespaced:!1,kind:"BackupApply"},ManagementV1Cluster:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"",namespaced:!1,kind:"Cluster"},ManagementV1ClusterAccess:{group:"management.loft.sh",version:"v1",resource:"clusteraccesses",subResource:"",namespaced:!1,kind:"ClusterAccess"},ManagementV1ClusterAccessKey:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"accesskey",namespaced:!1,kind:"ClusterAccessKey"},ManagementV1ClusterAgentConfig:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"agentconfig",namespaced:!1,kind:"ClusterAgentConfig"},ManagementV1ClusterCharts:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"charts",namespaced:!1,kind:"ClusterCharts"},ManagementV1ClusterDomain:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"domain",namespaced:!1,kind:"ClusterDomain"},ManagementV1ClusterMemberAccess:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"memberaccess",namespaced:!1,kind:"ClusterMemberAccess"},ManagementV1ClusterMembers:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"members",namespaced:!1,kind:"ClusterMembers"},ManagementV1ClusterReset:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"reset",namespaced:!1,kind:"ClusterReset"},ManagementV1ClusterRoleTemplate:{group:"management.loft.sh",version:"v1",resource:"clusterroletemplates",subResource:"",namespaced:!1,kind:"ClusterRoleTemplate"},ManagementV1ClusterVirtualClusterDefaults:{group:"management.loft.sh",version:"v1",resource:"clusters",subResource:"virtualclusterdefaults",namespaced:!1,kind:"ClusterVirtualClusterDefaults"},ManagementV1Config:{group:"management.loft.sh",version:"v1",resource:"configs",subResource:"",namespaced:!1,kind:"Config"},ManagementV1ConvertVirtualClusterConfig:{group:"management.loft.sh",version:"v1",resource:"convertvirtualclusterconfig",subResource:"",namespaced:!1,kind:"ConvertVirtualClusterConfig"},ManagementV1DevPodEnvironmentTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodenvironmenttemplates",subResource:"",namespaced:!1,kind:"DevPodEnvironmentTemplate"},ManagementV1DevPodWorkspaceInstance:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"",namespaced:!0,kind:"DevPodWorkspaceInstance"},ManagementV1DevPodWorkspaceInstanceCancel:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"cancel",namespaced:!0,kind:"DevPodWorkspaceInstanceCancel"},ManagementV1DevPodWorkspaceInstanceDownload:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"download",namespaced:!0,kind:"DevPodWorkspaceInstanceDownload"},ManagementV1DevPodWorkspaceInstanceLog:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"log",namespaced:!0,kind:"DevPodWorkspaceInstanceLog"},ManagementV1DevPodWorkspaceInstanceStop:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"stop",namespaced:!0,kind:"DevPodWorkspaceInstanceStop"},ManagementV1DevPodWorkspaceInstanceTasks:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"tasks",namespaced:!0,kind:"DevPodWorkspaceInstanceTasks"},ManagementV1DevPodWorkspaceInstanceTroubleshoot:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"troubleshoot",namespaced:!0,kind:"DevPodWorkspaceInstanceTroubleshoot"},ManagementV1DevPodWorkspaceInstanceUp:{group:"management.loft.sh",version:"v1",resource:"devpodworkspaceinstances",subResource:"up",namespaced:!0,kind:"DevPodWorkspaceInstanceUp"},ManagementV1DevPodWorkspacePreset:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacepresets",subResource:"",namespaced:!1,kind:"DevPodWorkspacePreset"},ManagementV1DevPodWorkspaceTemplate:{group:"management.loft.sh",version:"v1",resource:"devpodworkspacetemplates",subResource:"",namespaced:!1,kind:"DevPodWorkspaceTemplate"},ManagementV1DirectClusterEndpointToken:{group:"management.loft.sh",version:"v1",resource:"directclusterendpointtokens",subResource:"",namespaced:!1,kind:"DirectClusterEndpointToken"},ManagementV1Event:{group:"management.loft.sh",version:"v1",resource:"events",subResource:"",namespaced:!1,kind:"Event"},ManagementV1Feature:{group:"management.loft.sh",version:"v1",resource:"features",subResource:"",namespaced:!1,kind:"Feature"},ManagementV1IngressAuthToken:{group:"management.loft.sh",version:"v1",resource:"ingressauthtokens",subResource:"",namespaced:!1,kind:"IngressAuthToken"},ManagementV1Kiosk:{group:"management.loft.sh",version:"v1",resource:"kiosk",subResource:"",namespaced:!1,kind:"Kiosk"},ManagementV1License:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"",namespaced:!1,kind:"License"},ManagementV1LicenseRequest:{group:"management.loft.sh",version:"v1",resource:"licenses",subResource:"request",namespaced:!1,kind:"LicenseRequest"},ManagementV1LicenseToken:{group:"management.loft.sh",version:"v1",resource:"licensetokens",subResource:"",namespaced:!1,kind:"LicenseToken"},ManagementV1LoftUpgrade:{group:"management.loft.sh",version:"v1",resource:"loftupgrades",subResource:"",namespaced:!1,kind:"LoftUpgrade"},ManagementV1OIDCClient:{group:"management.loft.sh",version:"v1",resource:"oidcclients",subResource:"",namespaced:!1,kind:"OIDCClient"},ManagementV1OwnedAccessKey:{group:"management.loft.sh",version:"v1",resource:"ownedaccesskeys",subResource:"",namespaced:!1,kind:"OwnedAccessKey"},ManagementV1Project:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"",namespaced:!1,kind:"Project"},ManagementV1ProjectChartInfo:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"chartinfo",namespaced:!1,kind:"ProjectChartInfo"},ManagementV1ProjectCharts:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"charts",namespaced:!1,kind:"ProjectCharts"},ManagementV1ProjectClusters:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"clusters",namespaced:!1,kind:"ProjectClusters"},ManagementV1ProjectImportSpace:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"importspace",namespaced:!1,kind:"ProjectImportSpace"},ManagementV1ProjectMembers:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"members",namespaced:!1,kind:"ProjectMembers"},ManagementV1ProjectMigrateSpaceInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratespaceinstance",namespaced:!1,kind:"ProjectMigrateSpaceInstance"},ManagementV1ProjectMigrateVirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"migratevirtualclusterinstance",namespaced:!1,kind:"ProjectMigrateVirtualClusterInstance"},ManagementV1ProjectSecret:{group:"management.loft.sh",version:"v1",resource:"projectsecrets",subResource:"",namespaced:!0,kind:"ProjectSecret"},ManagementV1ProjectTemplates:{group:"management.loft.sh",version:"v1",resource:"projects",subResource:"templates",namespaced:!1,kind:"ProjectTemplates"},ManagementV1RedirectToken:{group:"management.loft.sh",version:"v1",resource:"redirecttokens",subResource:"",namespaced:!1,kind:"RedirectToken"},ManagementV1RegisterVirtualCluster:{group:"management.loft.sh",version:"v1",resource:"registervirtualclusters",subResource:"",namespaced:!1,kind:"RegisterVirtualCluster"},ManagementV1ResetAccessKey:{group:"management.loft.sh",version:"v1",resource:"resetaccesskeys",subResource:"",namespaced:!1,kind:"ResetAccessKey"},ManagementV1Self:{group:"management.loft.sh",version:"v1",resource:"selves",subResource:"",namespaced:!1,kind:"Self"},ManagementV1SelfSubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"selfsubjectaccessreviews",subResource:"",namespaced:!1,kind:"SelfSubjectAccessReview"},ManagementV1SharedSecret:{group:"management.loft.sh",version:"v1",resource:"sharedsecrets",subResource:"",namespaced:!0,kind:"SharedSecret"},ManagementV1SpaceInstance:{group:"management.loft.sh",version:"v1",resource:"spaceinstances",subResource:"",namespaced:!0,kind:"SpaceInstance"},ManagementV1SpaceTemplate:{group:"management.loft.sh",version:"v1",resource:"spacetemplates",subResource:"",namespaced:!1,kind:"SpaceTemplate"},ManagementV1SubjectAccessReview:{group:"management.loft.sh",version:"v1",resource:"subjectaccessreviews",subResource:"",namespaced:!1,kind:"SubjectAccessReview"},ManagementV1Task:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"",namespaced:!1,kind:"Task"},ManagementV1TaskLog:{group:"management.loft.sh",version:"v1",resource:"tasks",subResource:"log",namespaced:!1,kind:"TaskLog"},ManagementV1Team:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"",namespaced:!1,kind:"Team"},ManagementV1TeamAccessKeys:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"accesskeys",namespaced:!1,kind:"TeamAccessKeys"},ManagementV1TeamClusters:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"clusters",namespaced:!1,kind:"TeamClusters"},ManagementV1TeamObjectPermissions:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"object-permissions",namespaced:!1,kind:"TeamObjectPermissions"},ManagementV1TeamPermissions:{group:"management.loft.sh",version:"v1",resource:"teams",subResource:"permissions",namespaced:!1,kind:"TeamPermissions"},ManagementV1TranslateVClusterResourceName:{group:"management.loft.sh",version:"v1",resource:"translatevclusterresourcenames",subResource:"",namespaced:!1,kind:"TranslateVClusterResourceName"},ManagementV1User:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"",namespaced:!1,kind:"User"},ManagementV1UserAccessKeys:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"accesskeys",namespaced:!1,kind:"UserAccessKeys"},ManagementV1UserClusters:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"clusters",namespaced:!1,kind:"UserClusters"},ManagementV1UserObjectPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"object-permissions",namespaced:!1,kind:"UserObjectPermissions"},ManagementV1UserPermissions:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"permissions",namespaced:!1,kind:"UserPermissions"},ManagementV1UserProfile:{group:"management.loft.sh",version:"v1",resource:"users",subResource:"profile",namespaced:!1,kind:"UserProfile"},ManagementV1VirtualClusterAccessKey:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"accesskey",namespaced:!0,kind:"VirtualClusterAccessKey"},ManagementV1VirtualClusterExternalDatabase:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"externaldatabase",namespaced:!0,kind:"VirtualClusterExternalDatabase"},ManagementV1VirtualClusterInstance:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"",namespaced:!0,kind:"VirtualClusterInstance"},ManagementV1VirtualClusterInstanceKubeConfig:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"kubeconfig",namespaced:!0,kind:"VirtualClusterInstanceKubeConfig"},ManagementV1VirtualClusterInstanceLog:{group:"management.loft.sh",version:"v1",resource:"virtualclusterinstances",subResource:"log",namespaced:!0,kind:"VirtualClusterInstanceLog"},ManagementV1VirtualClusterSchema:{group:"management.loft.sh",version:"v1",resource:"virtualclusterschemas",subResource:"",namespaced:!1,kind:"VirtualClusterSchema"},ManagementV1VirtualClusterTemplate:{group:"management.loft.sh",version:"v1",resource:"virtualclustertemplates",subResource:"",namespaced:!1,kind:"VirtualClusterTemplate"}};var N="virtualcluster.loft.sh",q="v1",pe="virtualcluster.loft.sh/v1",P="cluster.loft.sh",y="v1",ge="cluster.loft.sh/v1",de="management.loft.sh",F="v1",Ve="management.loft.sh/v1",fe="storage.loft.sh",he="v1",ve="storage.loft.sh/v1",B="apiextensions.k8s.io",H="v1",Re="apiextensions.k8s.io/v1",W=class{};var c={...K,ClusterV1SleepModeConfig:{group:P,version:y,resource:"sleepmodeconfigs",kind:"SleepModeConfig",namespaced:!0},ClusterV1HelmRelease:{group:P,version:y,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},ClusterV1ChartInfo:{group:P,version:y,resource:"chartinfos",kind:"ChartInfo"},VirtualclusterV1HelmRelease:{group:N,version:q,resource:"helmreleases",kind:"HelmRelease",namespaced:!0},CustomResourceDefinition:{group:B,version:H,resource:"customresourcedefinitions",kind:"CustomResourceDefinition"},StorageV1ClusterQuota:{group:"storage.loft.sh",version:F,resource:"clusterquotas",kind:"ClusterQuota"},NetworkingV1Ingress:{group:"networking.k8s.io",version:"v1",resource:"ingresses",kind:"Ingress",namespaced:!0},V1StatefulSet:{group:"apps",version:"v1",resource:"statefulsets",kind:"StatefulSet",namespaced:!0},V1Deployment:{group:"apps",version:"v1",resource:"deployments",kind:"Deployment",namespaced:!0},V1Event:{group:"",version:"v1",resource:"events",kind:"Event",namespaced:!0},V1Pod:{group:"",version:"v1",resource:"pods",kind:"Pod",namespaced:!0},V1Node:{group:"",version:"v1",resource:"nodes",kind:"Node"},V1Namespace:{group:"",version:"v1",resource:"namespaces",kind:"Namespace"},V1SelfSubjectAccessReview:{group:"authorization.k8s.io",version:"v1",resource:"selfsubjectaccessreviews",kind:"SelfSubjectAccessReview"},V1ClusterRole:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterroles",kind:"ClusterRole"},V1ClusterRoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"clusterrolebindings",kind:"ClusterRoleBinding"},V1Role:{group:"rbac.authorization.k8s.io",version:"v1",resource:"roles",kind:"Role",namespaced:!0},V1RoleBinding:{group:"rbac.authorization.k8s.io",version:"v1",resource:"rolebindings",kind:"RoleBinding",namespaced:!0},V1Secret:{group:"",version:"v1",resource:"secrets",kind:"Secret",namespaced:!0},V1ConfigMap:{group:"",version:"v1",resource:"configmaps",kind:"ConfigMap",namespaced:!0},V1Service:{group:"",version:"v1",resource:"services",kind:"Service",namespaced:!0},V1User:{group:"",version:"v1",resource:"users",kind:"User",namespaced:!1},V1StorageClassList:{group:"storage.k8s.io",version:"v1",resource:"storageclasses",kind:"StorageClass",namespaced:!1},V1Beta1PodMetrics:{group:"metrics.k8s.io",version:"v1beta1",resource:"pods",kind:"PodMetrics",namespaced:!0}};function f(a,e,s){return{apiVersion:a.group?a.group+"/"+a.version:a.version,kind:a.kind,metadata:{name:e},...s}}var T=class{constructor(e,s=void 0){this.val=e;this.extra=s;this.ok=!1;this.err=!0}},S=class{constructor(e,s=void 0){this.val=e;this.extra=s;this.ok=!0;this.err=!1}};function Se(a){return"ok"in a&&typeof a.ok=="boolean"&&"err"in a&&typeof a.err=="boolean"}var O="",L="Network",X="Forbidden",Y="BadRequest",U="NotFound",w="Unauthorized",Z="AlreadyExists",ee="InternalServerError",se="NotImplemented",re="BadGateway",I="ServiceUnavailable",te="GatewayTimeout",M=a=>{switch(a){case 400:return Y;case 401:return w;case 403:return X;case 404:return U;case 409:return Z;case 500:return ee;case 501:return se;case 502:return re;case 503:return I;case 504:return te}return O},o=class{static Ok(){return new S(void 0)}static Value(e){return new S(e)}static Failed(e,s="",r=O,t=void 0){return new T(new D(e,r,s),t)}static Error(e){return new T(e)}static WithExtra(e,s=void 0){return e.extra=s,e}},D=class{constructor(e,s=O,r=""){this.message=e;this.type=s;this.reason=r}};var k={secure:!0,expires:365*10,sameSite:"strict"},d=R.loftAccessKeyIdentifier,v=R.loftImpersonateSubjectIdentifier,C=R.loftImpersonateJoinedGroupIdentifier,oe=["v4.channel.k8s.io","v3.channel.k8s.io","v2.channel.k8s.io","channel.k8s.io"];function ae(){return typeof window<"u"&&window.location.href.startsWith("http://localhost:3000")?"https://localhost:9898":""}function ie(){return typeof window>"u"||window.location.host==="localhost:3000"?"wss://localhost:8080":`${window.location.protocol==="https:"?"wss":"ws"}://${window.location.host}`}function $(a){return[a.virtualCluster?"loft:vcluster:main":`loft:space:${a.project}:${a.space}`]}var J="/kubernetes/management",A="/kubernetes/cluster/",_="/kubernetes/virtualcluster/",z="/kubernetes/project/",Le=(a,e)=>a?e?`${e}${a}`:`p-${a}`:"p-";function Ue(a,e){if(a)return e?e.endsWith("-")?a.replace(new RegExp(`^${e}`),""):a.replace(new RegExp(`^${e}-`),""):a.replace(/^p-/,"")}var b=class{constructor(e,s,r){this.apiHost="";this.wsHost="";this.accessKey="";this.managementNonResource=()=>new l(this,{basePath:J,headers:this.impersonationHeaders()});this.cluster=(e,s)=>new l(this,{basePath:A+e,groupVersionResource:s,headers:this.impersonationHeaders()});this.clusterNonResource=e=>new l(this,{basePath:A+e,headers:this.impersonationHeaders()});this.project=(e,s)=>new l(this,{basePath:z+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),groupVersionResource:s,project:e,headers:this.impersonationHeaders($(e))});this.projectNonResource=e=>new l(this,{basePath:z+e.project+"/"+(e.space?"space/"+e.space:"virtualcluster/"+e.virtualCluster),project:e,headers:this.impersonationHeaders($(e))});this.apiHost=s||ae(),this.wsHost=r||ie(),this.accessKey=e||b.getAccessKey()}static getAccessKey(){return localStorage.getItem(d)}static tryCastToStatus(e){if(e.kind){if(e.kind!=="Status"||e.apiVersion!=="v1")return o.Value(null)}else return o.Value(null);return o.Value(e)}async getUser(){let e=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));return e.err?e:e.val.status?.user?(typeof window<"u"&&(window.loft||(window.loft={}),window.loft.instanceID=e.val.status.instanceID,window.loft.chatAuthToken=e.val.status.chatAuthToken,window.loft.user=e.val.status.user),o.Value(e.val.status.user.name)):o.Failed("no user found")}getAccessKey(){return this.accessKey}async loftVersion(e){try{let s=this.apiHost+"/version";e&&(s+="?refresh=true");let t=await(await fetch(s)).json();return o.Value(t)}catch(s){return console.error(s),o.Failed("error during version retrieval")}}impersonatedUser(){try{let e=localStorage.getItem(v);if(e)return JSON.parse(e)}catch(e){console.error(e)}}impersonate(e,s,r){s?(localStorage.setItem(v,JSON.stringify({name:e,subject:s,groups:r})),s&&m.set(v,s,k),r?.forEach(t=>{let n=m.get(C);n?(n+=", "+t,m.set(C,n,k)):m.set(C,t,k)})):(localStorage.removeItem(v),m.remove(v),m.remove(C))}async login(e,s){let r=await this.request("/auth/password/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,password:s})});if(r.err)return r;let t=r.val;return this.setAccessKey(t.accessKey),o.Ok()}async loginWithAccessKey(e){this.isLoggedIn()&&await this.logout(),this.accessKey=e;let s=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));return s.err?(this.clearStorage(),s):(this.setAccessKey(e),o.Ok())}isLoggedIn(){return!!this.accessKey}setAccessKey(e){this.accessKey=e,localStorage.setItem(d,e),m.set(d,e,k)}async stream(e,s){try{let r=await fetch(this.apiHost+e,s);return r.status>=400||!r.body?await this.parseResponse(e,r):o.Value(r.body.getReader())}catch(r){return o.Failed(r+"","NetworkError",L)}}async request(e,s){try{let r=await fetch(this.apiHost+e,{...s,credentials:"same-origin"});if(!r.ok){let n=await r.clone().text();if(r.status===401)try{let i=JSON.parse(n);if(i?.message===R.platformAccessKeyNotFound)return o.Failed(i.message||"Unauthorized",i.reason,w)}catch{}}return await this.parseResponse(e,r)}catch(r){let t=r;return t.message===R.platformAccessKeyNotFound&&(window.location.href=`/login?error=${t.message}&errorType=${t.reason}`),o.Failed(r+"","NetworkError",L)}}async socket(e,s){return this.refreshCookie(),new Promise((r,t)=>{let n=new WebSocket(`${this.wsHost}${e}`,s),i=!1;n.onopen=()=>{i=!0,r(n)},n.onerror=u=>{if(!i){let p=m.get(d)!="";t(p?u:new Error("Web socket is not authenticated. Please log in again"))}}})}async parseResponse(e,s){let r=await s.text(),t;try{t=JSON.parse(r)}catch{if(s.status===404)return o.Failed("page not found","NotFound",U);if(s.status===503){if(e.includes("kiosk.sh")||e.includes("cluster.loft.sh")){let u=e.split("/");return u.length>=4&&u[0]===""&&u[1]==="kubernetes"&&u[2]==="cluster"?o.Failed(`Agent seems to be currently unavailable, it is maybe just starting up. Click <a href="/spaces/${u[3]}/loft">here</a> for more information</span>`,"LoftAgentUnavailable",I):o.Failed("Agent seems to be currently unavailable, it is maybe just starting up","LoftAgentUnavailable",I)}}else if(s.status===200)return o.Value(r);return console.info("Unexpected Server Response",r),o.Failed("Unexpected server response",M(s.status),M(s.status))}let n=b.tryCastToStatus(t);return n.err?n:n.val!==null&&n.val.status==="Failure"?n.val.code===500&&(n.val.message?.indexOf("vcluster secret not found")!==-1||n.val.message.indexOf("no ready pod for virtual cluster")!==-1)?o.Failed("vcluster seems to be not ready. Please refresh in a second",n.val.reason,M(n.val.code)):o.Failed(n.val.message,n.val.reason,M(n.val.code)):s.status>=400?o.Failed("unknown error","Unknown",M(s.status)):o.Value(t)}management(e){return new l(this,{basePath:J,groupVersionResource:e,headers:this.impersonationHeaders()})}vCluster(e,s){return new l(this,{basePath:_+e.cluster+"/"+e.namespace+"/"+e.name,groupVersionResource:s,vCluster:e,headers:this.impersonationHeaders()})}vClusterNonResource(e){return new l(this,{basePath:_+e.cluster+"/"+e.namespace+"/"+e.name,vCluster:e,headers:this.impersonationHeaders()})}auto(e,s,r,t){return r?this.project(r,t):s?this.vCluster(s,t):e?this.cluster(e,t):this.management(t)}autoNonResource(e,s,r){return r?this.projectNonResource(r):s?this.vClusterNonResource(s):e?this.clusterNonResource(e):this.managementNonResource()}async doRawSocket(e,s){try{return o.Value(await this.socket(e,s))}catch(r){return console.error(r),o.Failed(r.message||JSON.stringify(r))}}async doRawStream(e,s,r){return this.doRawInternal(e,s,r,!0)}async doRaw(e,s,r){return this.doRawInternal(e,s,r)}async doRawInternal(e,s,r,t){let n=this.accessKey,i=n?new Headers({...r,Authorization:"bearer "+n,"X-Sleep-Mode-Ignore":"true","X-Platform-Client":"true"}):new Headers({...r,"X-Sleep-Mode-Ignore":"true","X-Platform-Client":"true"}),u=t?await this.stream(e,{...s,headers:i}):await this.request(e,{...s,headers:i});return u.err&&u.val.type===w&&(u.val.message==="Access key not found. Please login again"||u.val.message==="invalid bearer token")&&(this.clearStorage(),typeof window<"u"&&(window.location.href="/"),await new Promise(()=>{})),u}impersonationHeaders(e){let s=this.impersonatedUser(),r={};return s&&(s.subject&&(r["Impersonate-User"]=s.subject),[...h(s.groups),...h(e)].forEach(t=>{r["Impersonate-Joined-Group"]?r["Impersonate-Joined-Group"]+=", "+t:r["Impersonate-Joined-Group"]=t})),r}clearStorage(){this.accessKey=null,localStorage.removeItem(d),localStorage.removeItem(v),m.remove(d,{secure:!0}),m.remove(v,{secure:!0}),m.remove(C,{secure:!0})}refreshCookie(){let e=this.accessKey||localStorage.getItem(d),s=m.get(d);e&&e!=s&&m.set(d,e,k)}async logout(){let e=await this.management(c.ManagementV1Self).Create(f(c.ManagementV1Self));if(e.err)return this.clearStorage(),e;if(!e.val.status?.accessKey)return this.clearStorage(),o.Ok();let s=await this.management(c.ManagementV1OwnedAccessKey).Delete(e.val.status.accessKey);return s.err?(this.clearStorage(),s):(this.clearStorage(),o.Ok())}},l=class{constructor(e,s){this.client=e,this.options=s}Name(e){return new l(this.client,{...this.options,name:e})}Namespace(e){return e?new l(this.client,{...this.options,namespace:e}):new l(this.client,{...this.options})}Resource(e){return new l(this.client,{...this.options,groupVersionResource:e})}buildPath(e){if(this.options.groupVersionResource)if(this.options.basePath){if(!this.options.name&&this.options.groupVersionResource.subResource)return o.Failed("resource name required when subresource is used")}else return o.Failed("basePath is missing");else return o.Failed("groupVersionResource is missing");let s=[this.options.basePath];this.options.groupVersionResource.group?s.push("apis",this.options.groupVersionResource.group):s.push("api"),s.push(this.options.groupVersionResource.version),this.options.namespace&&s.push("namespaces",this.options.namespace),s.push(this.options.groupVersionResource.resource),this.options.name&&s.push(this.options.name),this.options.groupVersionResource.subResource&&s.push(this.options.groupVersionResource.subResource);let r="";if(e){let t=[];for(let n of Object.keys(e))e[n]&&(Array.isArray(e[n])?e[n].forEach(i=>{t.push(n+"="+encodeURIComponent(i))}):t.push(n+"="+encodeURIComponent(e[n])));t.length>0&&(r="?"+t.join("&"))}else r="?timeout=180s";return o.Value(s.join("/")+r)}async ApiResources(e,s){let r=[],t=await this.client.doRaw([this.options.basePath,"api"].join("/"));if(t.err)return t;let n=[];for(let u=0;u<h(t.val.versions).length;u++)n.push((async p=>{let g=t.val.versions[p];if(g===void 0)return;let V=await this.client.doRaw([this.options.basePath,"api",g].join("/"));if(V.err){console.error(V.val.message);return}E("",g,V.val,r,e,s)})(u)),n.length>20&&(await Promise.all(n),n=[]);n.length>0&&(await Promise.all(n),n=[]);let i=await this.client.doRaw([this.options.basePath,"apis"].join("/"));if(i.err)return i;for(let u=0;u<h(i.val.groups).length;u++){let p=i.val.groups[u];if(p!==void 0)for(let g=0;g<h(p.versions).length;g++)n.push((async(V,j)=>{let G=j.versions[V];if(G===void 0)return;let x=await this.client.doRaw([this.options.basePath,"apis",j.name,G.version].join("/"));if(x.err){console.error(x.val.message);return}E(j.name,G.version,x.val,r,e,s)})(g,p)),n.length>20&&(await Promise.all(n),n=[])}return n.length>0&&await Promise.all(n),o.Value(r)}async Version(){let e=[this.options.basePath,"version"];return await this.client.doRaw(e.join("/"))}async VirtualClusterInstanceLogs(e,s,r){let t=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/virtualclusterinstances/${s}/log`].join("/"),n=[];if(r)for(let i of Object.keys(r))n.push(`${i}=${encodeURIComponent(r[i])}`);return n.length>0&&(t+="?"+n.join("&")),await this.client.doRawStream(t,void 0,this.options.headers)}async TaskLogs(e,s){let r=[this.options.basePath,`apis/management.loft.sh/v1/tasks/${e}/log`].join("/"),t=[];if(s)for(let n of Object.keys(s))t.push(`${n}=${encodeURIComponent(s[n])}`);return t.length>0&&(r+="?"+t.join("&")),await this.client.doRawStream(r,void 0,this.options.headers)}async DevPodWorkspaceInstanceLogs(e,s,r,t){let n=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/devpodworkspaceinstances/${s}/log`].join("/"),i=["taskID="+r];if(t)for(let u of Object.keys(t))i.push(`${u}=${encodeURIComponent(t[u])}`);return i.length>0&&(n+="?"+i.join("&")),await this.client.doRawStream(n,void 0,this.options.headers)}async DevPodWorkspaceInstanceTasks(e,s){let r=[this.options.basePath,`apis/management.loft.sh/v1/namespaces/${e}/devpodworkspaceinstances/${s}/tasks`].join("/");return this.client.doRaw(r,void 0,this.options.headers)}async Logs(e,s,r){let t=[this.options.basePath,`api/v1/namespaces/${e}/pods/${s}/log`].join("/"),n=Q(r);return n.length>0&&(t+="?"+n),await this.client.doRawStream(t,void 0,this.options.headers)}async Exec(e,s,r){let t=[this.options.basePath,`api/v1/namespaces/${e}/pods/${s}/exec`].join("/"),n=Q(r);return n.length>0&&(t+="?"+n),await this.client.doRawSocket(t,oe)}async Path(e,s,r){let t=[this.options.basePath,e];return await this.client.doRaw(t.join("/"),s,{...r,...this.options.headers})}ResolvePath(e){return e&&(this.options.name=e),this.buildPath()}async Get(e,s){this.options.name=e;let r=this.buildPath(s);return r.err?r:o.WithExtra(await this.client.doRaw(r.val,void 0,this.options.headers),this.options)}async List(e){if(this.options.name)return o.Failed("name is set on a list request");let s=this.buildPath(e);return s.err?s:o.WithExtra(await this.client.doRaw(s.val,void 0,this.options.headers),this.options)}async ListTable(e){if(this.options.name)return o.Failed("name is set on a list request");let s=this.buildPath(e);return s.err?s:o.WithExtra(await this.client.doRaw(s.val,void 0,{...this.options.headers,Accept:"application/json;as=Table;v=v1;g=meta.k8s.io,application/json;as=Table;v=v1beta1;g=meta.k8s.io,application/json"}),this.options)}async Create(e,s){let r=this.buildPath(s);return r.err?r:o.WithExtra(await this.client.doRaw(r.val,{method:"POST",body:JSON.stringify(e)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async PatchObject(e,s,r,t){let n=ne.generate(e,s);return this.Patch(s.metadata?.name,n,r,t)}async Patch(e,s,r,t){this.options.name=e;let n=this.buildPath(t);return n.err?n:o.WithExtra(await this.client.doRaw(n.val,{method:"PATCH",body:JSON.stringify(s,function(i,u){return u===void 0?null:u})},{...this.options.headers,"Content-Type":r||"application/merge-patch+json"}),this.options)}async Update(e,s,r){this.options.name=e;let t=this.buildPath(r);return t.err?t:o.WithExtra(await this.client.doRaw(t.val,{method:"PUT",body:JSON.stringify(s)},{...this.options.headers,"Content-Type":"application/json"}),this.options)}async Delete(e,s){this.options.name=e;let r=this.buildPath(s);return r.err?r:o.WithExtra(await this.client.doRaw(r.val,{method:"DELETE"},this.options.headers),this.options)}async CanI(e){let s=this.options.groupVersionResource,r=this.options.basePath?.indexOf(A)===0?this.options.basePath.substring(A.length):void 0,t,n;this.options.project?(t=this.client.project(this.options.project,c.V1SelfSubjectAccessReview),n=f(c.V1SelfSubjectAccessReview)):this.options.vCluster?(t=this.client.vCluster(this.options.vCluster,c.V1SelfSubjectAccessReview),n=f(c.V1SelfSubjectAccessReview)):r?(t=this.client.cluster(r,c.V1SelfSubjectAccessReview),n=f(c.V1SelfSubjectAccessReview)):(t=this.client.management(c.ManagementV1SelfSubjectAccessReview),n=f(c.ManagementV1SelfSubjectAccessReview)),n.spec={resourceAttributes:{verb:e,name:this.options.name,namespace:this.options.namespace,group:s.group,version:s.version,resource:s.resource,subresource:s.subResource}};let i=await t.Create(n);return i.err?i:o.Value(!!(i.val.status?.allowed&&!i.val.status.denied))}};function Q(a){let e=new URLSearchParams;for(let[s,r]of Object.entries(a))Array.isArray(r)?r.forEach(t=>{e.append(s,t)}):e.append(s,r);return e.toString()}var ue=b;export{B as APIExtensionsGroup,Re as APIExtensionsGroupVersion,H as APIExtensionsVersion,ue as Client,A as ClusterBasePath,T as Err,Z as ErrorTypeAlreadyExists,re as ErrorTypeBadGateway,Y as ErrorTypeBadRequest,X as ErrorTypeForbidden,te as ErrorTypeGatewayTimeout,ee as ErrorTypeInternalError,L as ErrorTypeNetwork,U as ErrorTypeNotFound,se as ErrorTypeNotImplemented,I as ErrorTypeServiceUnavailable,w as ErrorTypeUnauthorized,O as ErrorTypeUnknown,D as Failed,W as List,de as LoftSchemeGroup,P as LoftSchemeGroupCluster,fe as LoftSchemeGroupStorage,Ve as LoftSchemeGroupVersion,ge as LoftSchemeGroupVersionCluster,ve as LoftSchemeGroupVersionStorage,pe as LoftSchemeGroupVersionVirtualCluster,N as LoftSchemeGroupVirtualCluster,F as LoftSchemeVersion,y as LoftSchemeVersionCluster,he as LoftSchemeVersionStorage,q as LoftSchemeVersionVirtualCluster,J as ManagementBasePath,M as MapErrorCode,f as NewResource,S as Ok,z as ProjectBasePath,c as Resources,o as Return,_ as VClusterBasePath,ae as getApiHost,Ue as getProjectFromNamespace,Le as getProjectNamespace,Se as isResult};
